{"version":3,"file":"static/webpack/static/development/pages/stadia.js.19c6c38016145c12fe38.hot-update.js","sources":["webpack:///./components/BattleMap.js"],"sourcesContent":["import React, {useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { REFRESH_STADIUMLIST_REQUEST } from '../reducers/location';\nimport { Row, Col, Spin } from 'antd';\nimport Maps from './Maps';\nimport StadiumList from './StadiumList';\n\nconst BattleMap = () => {\n    const { stadiumList, isChangedLocation, isChangingLocation, latitude, longitude} = useSelector(state => state.location);\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        //If users didn`t access BattleMap page from Index, to cover another access\n        if(stadiumList.length === 0){\n            dispatch({\n                type:REFRESH_STADIUMLIST_REQUEST,\n                data:{latitude: latitude, longitude: longitude,} \n            })\n        }\n        console.log(stadiumList)\n    },[])\n\n    return (\n        <div>\n            <Row gutter={[20, 16]}>\n\n                <Col xs={{ span: 22, offset: 1 }} md={{ span: 15, offset: 2 }}>\n                    {/* 지도 */}\n                    {/* {isChangingLocation && <Spin size=\"large\" tip=\"Loading..\" />} */}\n                    {/* {isChangedLocation && <Maps list={stadiumList} />} */}\n                    <Maps list={stadiumList} />\n                </Col>\n\n                <Col xs={{ span: 22, offset: 1 }} md={{ span: 5, offset: 0 }}>\n                    {/* 리스트 */}\n                    {/* {isChangedLocation && <StadiumList list={stadiumList} />} */}\n                    <StadiumList list={stadiumList} />\n                </Col>\n\n            </Row>\n        </div>\n    );\n};\n\nexport default BattleMap;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}