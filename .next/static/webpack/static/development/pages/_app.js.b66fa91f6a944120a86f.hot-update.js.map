{"version":3,"file":"static/webpack/static/development/pages/_app.js.b66fa91f6a944120a86f.hot-update.js","sources":["webpack:///./components/AppLayout.js","webpack:///./components/ProfileAvatar.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\nimport { Menu, Input, Button, Row, Col, Affix, message, } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport LoginForm from './LoginForm';\nimport ProfileAvatar from './ProfileAvatar';\nimport { LOG_OUT_REQUEST } from '../reducers/user';\nimport Message from './Message';\nimport { HomeOutlined, MessageFilled, UserAddOutlined, PlusSquareOutlined, LineChartOutlined } from '@ant-design/icons';\nimport { SEARCH_TEAMS_REQUEST } from '../reducers/team';\n\nconst AppLayout = ({ children }) => {\n    const { isLoggedIn, me } = useSelector(state => state.user);\n    const [visible, setVisible] = useState(false);\n    const Router = useRouter();\n    const dispatch = useDispatch();\n    \n    const showModal = () => setVisible(true); \n    const onLogOut = useCallback(() => {\n        dispatch({type: LOG_OUT_REQUEST});\n    }, []);\n    const onApply = () => {\n        !isLoggedIn ? message.info(\"로그인 후 등록할 수 있습니다.\") : Router.push('/stadium/register/location');\n    }\n    const searchTeam = (value, event) => {\n        event.preventDefault();\n        dispatch({\n            type:SEARCH_TEAMS_REQUEST, \n            data:{\"query\": value},\n        });\n        Router.push(`/team/search?q=${value}`);\n    }\n    return (\n        <Row id=\"mainContainer\">\n            <Col xs={{ span: 24 }} sm={{ span: 22, offset: 1 }} md={{ span: 18, offset: 3 }}>\n                <Menu mode=\"horizontal\" style={{ marginBottom: '20px' }} defaultSelectedKeys=\"home\" >\n                    <Menu.Item key=\"home\" ><Link href=\"/stadia\"><a><HomeOutlined />구장깨기</a></Link></Menu.Item>\n                    <Menu.Item key=\"ranking\" ><Link href=\"/team/ranking\"><a><LineChartOutlined />순위보기</a></Link></Menu.Item>\n                    <Menu.Item key=\"location\">\n                        <Input.Search enterButton style={{ verticalAlign: 'middle' }} placeholder=\"팀 검색하기\" onSearch={searchTeam}/>\n                    </Menu.Item>\n                    <Menu.Item onClick={onApply} key=\"applyStadium\"><PlusSquareOutlined />신규구장 등록하기</Menu.Item>\n                    {isLoggedIn && !me.club && <Menu.Item key=\"makeTeam\"><Link href=\"/team/register\"><a>팀 생성하기</a></Link></Menu.Item>}\n                    {isLoggedIn && me.club && <Menu.Item key=\"Team\"><Link href=\"/team/[id]\" as={`/team/${me.club}`} ><a>팀 관리</a></Link></Menu.Item>}\n                    {isLoggedIn && <Menu.Item key=\"logout\" onClick={onLogOut} style={{ float: \"right\" }}>로그아웃</Menu.Item>}\n                    {isLoggedIn && <Menu.Item key=\"profile\" style={{ float: \"right\" }}><ProfileAvatar/></Menu.Item>}\n                    {!isLoggedIn && <Menu.Item key=\"login_modal\" onClick={showModal} style={{ float: \"right\" }}>로그인</Menu.Item>}\n                    {!isLoggedIn && <Menu.Item key=\"signup\" style={{ float: \"right\" }}><Link href=\"/signup\"><a><UserAddOutlined />회원가입</a></Link></Menu.Item>}\n                </Menu>\n                <LoginForm visible={visible} setVisible={setVisible} ></LoginForm>\n            </Col>\n            <Col span={24}>\n                {children}\n            </Col>\n            {isLoggedIn && <Affix target={() => document.getElementById(\"mainContainer\")} style={{ position: \"fixed\", right: '5vw', bottom: '10vh' }} ><Button type=\"primary\" shape=\"circle\" size=\"large\" icon={<MessageFilled />} ></Button> </Affix>}\n        </Row>\n    );\n};\n\nAppLayout.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default AppLayout;","import { useSelector} from 'react-redux';\nimport { Popover, Card, List, Avatar } from 'antd';\n// import { UserOutlined } from '@ant-design/icons';\n\nconst tabList = [\n    {\n        key: \"latest\",\n        tab: \"최근 본 구장\"\n    },\n    {\n        key: \"info\",\n        tab: \"회원정보\"\n    },\n]\nconst contentList = {\n    latest: <List></List>,\n    info: <a></a>\n};\n\nconst ProfileAvatar = () => {\n    const { me } = useSelector(state => state.user);\n    const CardTabs = (<Card\n        tabList={tabList}\n    // activeTabKey={}\n    >\n    </Card>);\n    return (\n        <Popover placement=\"bottom\" trigger=\"hover\" content={CardTabs}>\n            <Avatar shape=\"circle\" >{me.nickname}</Avatar>\n        </Popover>\n    );\n}\n\nexport default ProfileAvatar;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAIA;AAAA;AACA;AAAA;AADA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;A","sourceRoot":""}