{"version":3,"file":"static/webpack/static/development/pages/stadia.js.251cf373f1e14cc59fd5.hot-update.js","sources":["webpack:///./components/Maps.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Router, { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { REFRESH_STADIUMLIST_REQUEST } from '../reducers/location';\nimport { notification, message } from 'antd';\nimport { LoadingOutlined,} from '@ant-design/icons';\nimport  styles from '../SCSS/map.module.scss';\n\nconst Maps = (props) => {\n    const  stadiumList  = props.list;\n    const [map, setMap] = useState();\n    const { latitude, longitude,} = useSelector(state => state.location);\n    const dispatch = useDispatch();\n    let options;\n    let temp;\n\n    function closeOverlay() {\n        overlay.setMap(null);\n    }\n    useEffect(\n        () => {\n            //최초 마운트 시\n            options = {\n                center: new kakao.maps.LatLng(latitude, longitude),\n                level: 8\n            };\n            temp = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n            temp.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n            kakao.maps.event.addListener(temp, 'dragend', function () {\n                let latlng = temp.getCenter();\n                dispatch({ type:REFRESH_STADIUMLIST_REQUEST , data:{latitude: latlng.getLat(), longitude: latlng.getLng()} });\n            });\n            setMap(temp);\n            if (props.router.query.arr) {\n                const arr = props.router.query.arr.split(\",\");\n                if (arr[0] === \"success\") {\n                    message.success(arr[1]);\n                } else if (arr[0] === \"warn\") {\n                    notification.destroy();\n                    notification.open({ message: \"현재위치로 탐색하시려면?\", description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\", duration: 0 })\n                } else {\n                    message.error(arr[1], 4);\n                }\n            }\n        }, []\n    );\n    useEffect(() => {\n        stadiumList.forEach((c) => {\n            let position = new kakao.maps.LatLng(c.lat, c.lng);\n            let marker = new kakao.maps.Marker(\n                {\n                    map: temp ?? map,\n                    position: position\n                }\n            )\n            let customOverlay = new daum.maps.CustomOverlay({\n                position: marker.getPosition()\n            });\n\n            // let content = `<div class=\"wrap\" style=\"background:white\"> \n            //         <div class=\"info\"> \n            //             <div class=\"title\"> \n            //                 ${c.title} \n            //                 <div class=\"close\" onclick=\"closeOverlay()\" title=\"닫기\">X</div> \n            //             </div> \n            //             <div class=\"body\"> \n            //                 <div class=\"desc\"> \n            //                     <div class=\"ellipsis\">${c.address}</div> \n            //                     <div>${<Link href=\"/stadium/[id]\" as={`/stadium/${c.req}`} ><a>구장 확인하기</a></Link>}</div> \n            //                 </div> \n            //             </div> \n            //         </div> \n            //     </div>`;\n\n            let content = document.createElement('div');\n            content.className = `${styles.mapOverLay}`\n\n            let content_inner = document.createElement('div');\n            content_inner.className = `${styles.overLayInner}`\n\n            let content_title = document.createElement('div');\n            content_title.className = `${styles.innerTitle}`\n\n            let btn_close = document.createElement('div');\n            btn_close.className = `${styles.titleClose}`\n            btn_close.setAttribute(\"title\", \"닫기\");\n            btn_close.onclick = function() { customOverlay.setMap(null); };\n            \n            content_title.appendChild(document.createTextNode(c.title));\n            content_title.appendChild(btn_close);\n\n            let content_body = document.createElement('div');\n            content_body.className = `${styles.innerBody}`\n            \n            let body_img = document.createElement('div');\n            // body_img.className = `${styles.bodyImg}`\n            let img = document.createElement('img');\n            img.setAttribute('src', c.src ?? \"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\");\n            body_img.appendChild(img);\n\n            let body_info = document.createElement('div');\n            body_info.className = `${styles.bodyInfo}`\n            let info_address = document.createElement('div');\n            info_address.className = `${styles.bodyAddress}`\n            info_address.appendChild(document.createTextNode(c.address));\n            let info_href = document.createElement('div');\n            let href_anchor = document.createElement('a');\n            href_anchor.appendChild(document.createTextNode(\"구장 확인하러 가기\"));\n            href_anchor.onclick = function() { Router.push(`/stadium/${c.req}`)};\n            info_href.appendChild(href_anchor);\n\n            body_info.appendChild(info_address);\n            body_info.appendChild(info_href);\n            content_body.appendChild(body_img);\n            content_body.appendChild(body_info);\n\n            content_inner.appendChild(content_title);\n            content_inner.appendChild(content_body);\n            content.appendChild(content_inner);\n            \n            customOverlay.setContent(content);\n            customOverlay.setMap(null);\n\n            (function (marker, customOverlay) {\n                kakao.maps.event.addListener(marker, 'click', function () {\n                    customOverlay.setMap(temp ?? map);\n                });\n            })(marker, customOverlay);\n        })\n    }, [stadiumList])\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} />\n        </div>\n    );\n};\n\nexport default withRouter(Maps);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}