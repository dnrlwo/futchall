{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/StadiumComment.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Comment, List, Avatar, Form, Button, Input, Rate } from 'antd';\nimport { ADD_COMMENT_REQUEST } from '../reducers/stadium';\n\nvar CommentList = function CommentList(_ref) {\n  var comments = _ref.comments;\n  return __jsx(List, {\n    dataSource: comments,\n    itemLayout: \"horizontal\",\n    renderItem: function renderItem(props) {\n      return __jsx(Comment, _extends({}, props, {\n        avatar: __jsx(Avatar, {\n          shape: \"circle\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 58\n          }\n        }, props.profile),\n        actions: [__jsx(Rate, {\n          disabled: true,\n          defaultValue: props.rating,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 117\n          }\n        })],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 30\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  });\n};\n\nvar StadiumComment = function StadiumComment() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.stadium;\n  }),\n      comments = _useSelector.comments,\n      isAddingComment = _useSelector.isAddingComment,\n      isAddedComment = _useSelector.isAddedComment;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector2.isLoggedIn,\n      me = _useSelector2.me;\n\n  var _useState = useState(''),\n      comment = _useState[0],\n      onChangeComment = _useState[1];\n\n  var _useState2 = useState(2.5),\n      rate = _useState2[0],\n      onSetRate = _useState2[1];\n\n  var handleSubmit = function handleSubmit() {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        datetime: new Date().toLocaleString(),\n        content: comment,\n        avatar: me.nickname,\n        author: me.nickname,\n        rating: rate\n      }\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    onChangeComment(e.target.value);\n  };\n\n  var onChangeRate = function onChangeRate(e) {\n    onSetRate(e);\n  };\n\n  useEffect(function () {\n    if (isAddedComment) {\n      onChangeComment('');\n    }\n  }, [isAddedComment]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Comment, {\n    avatar: isLoggedIn && __jsx(Avatar, {\n      shape: \"circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }, me.nickname),\n    content: isLoggedIn && __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, __jsx(Input.TextArea, {\n      rows: 4,\n      onChange: handleChange,\n      value: comment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    })), __jsx(Form.Item, {\n      label: \"\\uD3C9\\uC810\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, __jsx(Rate, {\n      allowHalf: true,\n      onChange: onChangeRate,\n      value: Rate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    })), __jsx(Form.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      htmlType: \"submit\",\n      loading: isAddingComment,\n      onClick: handleSubmit,\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, \"\\uB4F1\\uB85D\"))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), comments.length > 0 && __jsx(CommentList, {\n    comments: comments,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }));\n};\n\nexport default StadiumComment;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/StadiumComment.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Comment","List","Avatar","Form","Button","Input","Rate","ADD_COMMENT_REQUEST","CommentList","comments","props","profile","rating","StadiumComment","dispatch","state","stadium","isAddingComment","isAddedComment","user","isLoggedIn","me","comment","onChangeComment","rate","onSetRate","handleSubmit","type","data","datetime","Date","toLocaleString","content","avatar","nickname","author","handleChange","e","target","value","onChangeRate","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {Comment, List, Avatar, Form, Button, Input, Rate} from 'antd';\nimport {ADD_COMMENT_REQUEST} from '../reducers/stadium'\n\nconst CommentList = ({ comments }) => (\n    <List\n        dataSource={comments}\n        itemLayout=\"horizontal\"\n        renderItem={props => <Comment {...props} avatar={<Avatar shape=\"circle\">{props.profile}</Avatar>} actions={[<Rate disabled defaultValue={props.rating}></Rate>]} />}\n    />\n);\n\nconst StadiumComment = () =>{\n    const dispatch = useDispatch();\n    const { comments, isAddingComment, isAddedComment } = useSelector(state=> state.stadium);\n    const { isLoggedIn, me } = useSelector(state => state.user);\n    const [comment, onChangeComment] = useState('');\n    const [rate, onSetRate] = useState(2.5);\n\n    const handleSubmit = ()=>{\n        dispatch({\n            type:ADD_COMMENT_REQUEST,\n            data:{\n                datetime: new Date().toLocaleString(),\n                content: comment,\n                avatar:me.nickname,\n                author:me.nickname,\n                rating:rate,\n            }\n        });\n    }\n    const handleChange= (e)=>{\n        onChangeComment(e.target.value);\n    }\n    const onChangeRate = (e) =>{\n        onSetRate(e);\n    }\n    useEffect(()=>{\n        if(isAddedComment){\n            onChangeComment('');\n        }\n    },[isAddedComment])\n    return(\n        <div>\n            <Comment\n            avatar = {isLoggedIn && <Avatar shape=\"circle\">{me.nickname}</Avatar> }\n            content = {\n                isLoggedIn &&\n                <div>\n                    <Form.Item>\n                        <Input.TextArea rows={4} onChange={handleChange} value={comment} />\n                    </Form.Item>\n                    <Form.Item label=\"평점\" >\n                        <Rate allowHalf={true} onChange={onChangeRate} value={Rate}></Rate>\n                    </Form.Item>\n                    <Form.Item>\n                        <Button htmlType=\"submit\" loading={isAddingComment} onClick={handleSubmit} type=\"primary\">\n                            등록\n                        </Button>\n                    </Form.Item>\n                    \n                </div>\n            }\n            />\n            {comments.length > 0 && <CommentList comments={comments} />}\n        </div>\n    );\n}\nexport default StadiumComment;"]},"metadata":{},"sourceType":"module"}