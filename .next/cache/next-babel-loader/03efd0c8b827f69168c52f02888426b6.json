{"ast":null,"code":"var _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport { withRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeLocationAction } from '../reducers/location';\nimport { makeMarker } from '../util/makeMarker';\nimport { notification, message, Card } from 'antd';\nimport { LoadingOutlined, CloseOutlined } from '@ant-design/icons';\n\nconst Maps = props => {\n  const {\n    latitude,\n    longitude,\n    stadiumList\n  } = useSelector(state => state.location);\n  const dispatch = useDispatch();\n  let options; // let map;\n\n  const {\n    0: map,\n    1: setMap\n  } = useState(null);\n  useEffect(() => {\n    //최초 마운트 시\n    options = {\n      center: new kakao.maps.LatLng(latitude, longitude),\n      level: 8\n    };\n    let ja = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n    setMap(ja);\n    console.log(ja); // map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n    // kakao.maps.event.addListener(map, 'dragend', function () {\n    //     let latlng = map.getCenter();\n    //     dispatch(changeLocationAction({ latitude: latlng.getLat(), longitude: latlng.getLng(), }));\n    // });\n    // if (props.router.query.arr) {\n    //     const arr = props.router.query.arr.split(\",\");\n    //     if (arr[0] === \"success\") {\n    //         message.success(arr[1]);\n    //     } else if (arr[0] === \"warn\") {\n    //         notification.destroy();\n    //         notification.open({ message: \"현재위치로 탐색하시려면?\", description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\", duration: 0 })\n    //     } else {\n    //         message.error(arr[1], 4);\n    //     }\n    // }\n  }, []);\n  useEffect(() => {\n    console.log(\"useEffect after change stadiumList\");\n    console.log(stadiumList);\n    console.log(map); // stadiumList.map((c) => {\n    //     var marker = new kakao.maps.Marker(\n    //         {\n    //             map: map,\n    //             position: new kakao.maps.LatLng(c.lat, c.lng)\n    //         }\n    //     )\n    //     let content = '<div class=\"wrap\">' +\n    //         '    <div class=\"info\">' +\n    //         '        <div class=\"title\">' +\n    //         '            카카오 스페이스닷원' +\n    //         '            <div class=\"close\" onclick=\"closeOverlay()\" title=\"닫기\"></div>' +\n    //         '        </div>' +\n    //         '        <div class=\"body\">' +\n    //         '            <div class=\"img\">' +\n    //         '           </div>' +\n    //         '            <div class=\"desc\">' +\n    //         '                <div class=\"ellipsis\">제주특별자치도 제주시 첨단로 242</div>' +\n    //         '                <div class=\"jibun ellipsis\">(우) 63309 (지번) 영평동 2181</div>' +\n    //         '                <div><a href=\"https://www.kakaocorp.com/main\" target=\"_blank\" class=\"link\">홈페이지</a></div>' +\n    //         '            </div>' +\n    //         '        </div>' +\n    //         '    </div>' +\n    //         '</div>';\n    //     let overlay = new kakao.maps.CustomOverlay({\n    //         content: content,\n    //         map: null,\n    //         position: marker.getPosition()\n    //     });\n    // (function (marker, overlay) {\n    //     kakao.maps.event.addListener(marker, 'click', function () {\n    //         overlay.setMap(map);\n    //     });\n    //     function closeOverlay() {\n    //         overlay.setMap(null);\n    //     }\n    // })(marker, overlay);\n    // })\n  }, [stadiumList]);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(LoadingOutlined, {\n    style: {\n      margin: '0 auto',\n      width: '10vh',\n      height: '10vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default withRouter(Maps);","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","useState","useRef","withRouter","useSelector","useDispatch","changeLocationAction","makeMarker","notification","message","Card","LoadingOutlined","CloseOutlined","Maps","props","latitude","longitude","stadiumList","state","location","dispatch","options","map","setMap","center","kakao","maps","LatLng","level","ja","Map","document","getElementById","console","log","height","textAlign","margin","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,IAAhC,QAA4C,MAA5C;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,mBAA/C;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAuCb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAxD;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,MAAIgB,OAAJ,CAHoB,CAIpB;;AACA,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBtB,QAAQ,CAAC,IAAD,CAA9B;AACAD,EAAAA,SAAS,CACL,MAAM;AACF;AACAqB,IAAAA,OAAO,GAAG;AACNG,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBZ,QAAtB,EAAgCC,SAAhC,CADF;AAENY,MAAAA,KAAK,EAAE;AAFD,KAAV;AAIA,QAAIC,EAAE,GAAG,IAAIJ,KAAK,CAACC,IAAN,CAAWI,GAAf,CAAmBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB,EAA4DX,OAA5D,CAAT;AACAE,IAAAA,MAAM,CAACM,EAAD,CAAN;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ,EARE,CASF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA1BI,EA0BF,EA1BE,CAAT;AA4BA7B,EAAAA,SAAS,CAAC,MAAM;AACZiC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ,EAHY,CAIZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA3CQ,EA2CN,CAACL,WAAD,CA3CM,CAAT;AA4CA,SACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAuB,IAAA,KAAK,EAAE;AAAEkB,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,KAAK,EAAE,MAA3B;AAAmCH,MAAAA,MAAM,EAAE;AAA3C,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAnFD;;AAqFA,eAAehC,UAAU,CAACU,IAAD,CAAzB","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { withRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeLocationAction } from '../reducers/location';\nimport { makeMarker } from '../util/makeMarker';\nimport { notification, message, Card } from 'antd';\nimport { LoadingOutlined, CloseOutlined } from '@ant-design/icons';\nconst Maps = (props) => {\n    const { latitude, longitude, stadiumList } = useSelector(state => state.location);\n    const dispatch = useDispatch();\n    let options;\n    // let map;\n    const [map, setMap] = useState(null);\n    useEffect(\n        () => {\n            //최초 마운트 시\n            options = {\n                center: new kakao.maps.LatLng(latitude, longitude),\n                level: 8\n            };\n            let ja = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n            setMap(ja);\n            console.log(ja);\n            // map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n            // kakao.maps.event.addListener(map, 'dragend', function () {\n            //     let latlng = map.getCenter();\n            //     dispatch(changeLocationAction({ latitude: latlng.getLat(), longitude: latlng.getLng(), }));\n            // });\n            // if (props.router.query.arr) {\n            //     const arr = props.router.query.arr.split(\",\");\n            //     if (arr[0] === \"success\") {\n            //         message.success(arr[1]);\n            //     } else if (arr[0] === \"warn\") {\n            //         notification.destroy();\n            //         notification.open({ message: \"현재위치로 탐색하시려면?\", description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\", duration: 0 })\n            //     } else {\n            //         message.error(arr[1], 4);\n            //     }\n            // }\n        }, []\n    );\n    useEffect(() => {\n        console.log(\"useEffect after change stadiumList\");\n        console.log(stadiumList);\n        console.log(map);\n        // stadiumList.map((c) => {\n        //     var marker = new kakao.maps.Marker(\n        //         {\n        //             map: map,\n        //             position: new kakao.maps.LatLng(c.lat, c.lng)\n        //         }\n        //     )\n        //     let content = '<div class=\"wrap\">' +\n        //         '    <div class=\"info\">' +\n        //         '        <div class=\"title\">' +\n        //         '            카카오 스페이스닷원' +\n        //         '            <div class=\"close\" onclick=\"closeOverlay()\" title=\"닫기\"></div>' +\n        //         '        </div>' +\n        //         '        <div class=\"body\">' +\n        //         '            <div class=\"img\">' +\n        //         '           </div>' +\n        //         '            <div class=\"desc\">' +\n        //         '                <div class=\"ellipsis\">제주특별자치도 제주시 첨단로 242</div>' +\n        //         '                <div class=\"jibun ellipsis\">(우) 63309 (지번) 영평동 2181</div>' +\n        //         '                <div><a href=\"https://www.kakaocorp.com/main\" target=\"_blank\" class=\"link\">홈페이지</a></div>' +\n        //         '            </div>' +\n        //         '        </div>' +\n        //         '    </div>' +\n        //         '</div>';\n        //     let overlay = new kakao.maps.CustomOverlay({\n        //         content: content,\n        //         map: null,\n        //         position: marker.getPosition()\n        //     });\n\n        // (function (marker, overlay) {\n        //     kakao.maps.event.addListener(marker, 'click', function () {\n        //         overlay.setMap(map);\n        //     });\n        //     function closeOverlay() {\n        //         overlay.setMap(null);\n        //     }\n        // })(marker, overlay);\n        // })\n    }, [stadiumList])\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} />\n        </div>\n    );\n};\n\nexport default withRouter(Maps);"]},"metadata":{},"sourceType":"module"}