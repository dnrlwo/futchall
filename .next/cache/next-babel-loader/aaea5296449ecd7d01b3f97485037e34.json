{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyList = [{\n  req: 1,\n  //시퀀스\n  title: \"누상동 다목적 운동장\",\n  //명칭\n  tag: [\"인도어풋살장\", \"무료\"],\n  lat: \"37.5795876\",\n  lng: \"126.9636324\"\n}, {\n  req: 2,\n  //시퀀스\n  title: \"서대문 돌산구장\",\n  //명칭\n  tag: [\"인조잔디축구장\", \"무료\"],\n  lat: \"37.602835\",\n  lng: \"126.945915\"\n}, {\n  req: 3,\n  //시퀀스\n  title: \"서울 농학교 풋살장\",\n  //명칭\n  tag: [\"인도어풋살장\", \"무료\"],\n  lat: \"37.584397\",\n  lng: \"126.968567\"\n}];\nexport const initialState = {\n  latitude: \"37.5795876\",\n  //현재 보는 지도의 위도\n  longitude: \"126.9636324\",\n  //현재 보는 지도의 경도\n  stadiumList: [{\n    req: 1,\n    //시퀀스\n    title: \"누상동 다목적 운동장\",\n    //명칭\n    tag: [\"인도어풋살장\", \"무료\"],\n    lat: \"37.5795876\",\n    lng: \"126.9636324\"\n  }],\n  isChangingLocation: false,\n  changeLocationErrorReason: ''\n};\nexport const REFRESH_STADIUMLIST_REQUEST = 'REFRESH_STADIUMLIST_REQUEST';\nexport const REFRESH_STADIUMLIST_SUCCESS = 'REFRESH_STADIUMLIST_SUCCESS';\nexport const REFRESH_STADIUMLIST_FAILURE = 'REFRESH_STADIUMLIST_FAILURE';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case REFRESH_STADIUMLIST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          latitude: action.data.latitude,\n          longitude: action.data.longitude,\n          isChangingLocation: true\n        });\n      }\n\n    case REFRESH_STADIUMLIST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isChangingLocation: false,\n          stadiumList: action.data\n        });\n      }\n\n    case REFRESH_STADIUMLIST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isChangingLocation: false,\n          changeLocationErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/reducers/location.js"],"names":["dummyList","req","title","tag","lat","lng","initialState","latitude","longitude","stadiumList","isChangingLocation","changeLocationErrorReason","REFRESH_STADIUMLIST_REQUEST","REFRESH_STADIUMLIST_SUCCESS","REFRESH_STADIUMLIST_FAILURE","state","action","type","data","error"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG,CACd;AACIC,EAAAA,GAAG,EAAE,CADT;AACY;AACRC,EAAAA,KAAK,EAAE,aAFX;AAE0B;AACtBC,EAAAA,GAAG,EAAE,CAAC,QAAD,EAAW,IAAX,CAHT;AAIIC,EAAAA,GAAG,EAAE,YAJT;AAKIC,EAAAA,GAAG,EAAE;AALT,CADc,EAQd;AACIJ,EAAAA,GAAG,EAAE,CADT;AACY;AACRC,EAAAA,KAAK,EAAE,UAFX;AAEuB;AACnBC,EAAAA,GAAG,EAAE,CAAC,SAAD,EAAY,IAAZ,CAHT;AAIIC,EAAAA,GAAG,EAAE,WAJT;AAKIC,EAAAA,GAAG,EAAE;AALT,CARc,EAed;AACIJ,EAAAA,GAAG,EAAE,CADT;AACY;AACRC,EAAAA,KAAK,EAAE,YAFX;AAEyB;AACrBC,EAAAA,GAAG,EAAE,CAAC,QAAD,EAAW,IAAX,CAHT;AAIIC,EAAAA,GAAG,EAAE,WAJT;AAKIC,EAAAA,GAAG,EAAE;AALT,CAfc,CAAlB;AAwBA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,QAAQ,EAAE,YADc;AACA;AACxBC,EAAAA,SAAS,EAAE,aAFa;AAEC;AACzBC,EAAAA,WAAW,EAAE,CACT;AACIR,IAAAA,GAAG,EAAE,CADT;AACY;AACRC,IAAAA,KAAK,EAAE,aAFX;AAE0B;AACtBC,IAAAA,GAAG,EAAE,CAAC,QAAD,EAAW,IAAX,CAHT;AAIIC,IAAAA,GAAG,EAAE,YAJT;AAKIC,IAAAA,GAAG,EAAE;AALT,GADS,CAHW;AAYxBK,EAAAA,kBAAkB,EAAC,KAZK;AAaxBC,EAAAA,yBAAyB,EAAC;AAbF,CAArB;AAeP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;AACP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;AACP,OAAO,MAAMC,2BAA2B,GAAG,6BAApC;AAEP,gBAAe,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,2BAAL;AAAkC;AAC9B,iCACOG,KADP;AAEIR,UAAAA,QAAQ,EAAES,MAAM,CAACE,IAAP,CAAYX,QAF1B;AAGIC,UAAAA,SAAS,EAAEQ,MAAM,CAACE,IAAP,CAAYV,SAH3B;AAIIE,UAAAA,kBAAkB,EAAC;AAJvB;AAMH;;AACD,SAAKG,2BAAL;AAAkC;AAC9B,iCACOE,KADP;AAEIL,UAAAA,kBAAkB,EAAC,KAFvB;AAGID,UAAAA,WAAW,EAACO,MAAM,CAACE;AAHvB;AAKH;;AACD,SAAKJ,2BAAL;AAAkC;AAC9B,iCACOC,KADP;AAEIL,UAAAA,kBAAkB,EAAC,KAFvB;AAGIC,UAAAA,yBAAyB,EAACK,MAAM,CAACG;AAHrC;AAKH;;AACD;AAAS;AACL,iCACOJ,KADP;AAGH;AA3BL;AA6BH,CA9BD","sourcesContent":["const dummyList = [\n    {\n        req: 1, //시퀀스\n        title: \"누상동 다목적 운동장\", //명칭\n        tag: [\"인도어풋살장\", \"무료\"],\n        lat: \"37.5795876\",\n        lng: \"126.9636324\",\n    },\n    {\n        req: 2, //시퀀스\n        title: \"서대문 돌산구장\", //명칭\n        tag: [\"인조잔디축구장\", \"무료\"],\n        lat: \"37.602835\",\n        lng: \"126.945915\",\n    },\n    {\n        req: 3, //시퀀스\n        title: \"서울 농학교 풋살장\", //명칭\n        tag: [\"인도어풋살장\", \"무료\"],\n        lat: \"37.584397\",\n        lng: \"126.968567\",\n    },\n]\n\nexport const initialState = {\n    latitude: \"37.5795876\", //현재 보는 지도의 위도\n    longitude: \"126.9636324\",//현재 보는 지도의 경도\n    stadiumList: [\n        {\n            req: 1, //시퀀스\n            title: \"누상동 다목적 운동장\", //명칭\n            tag: [\"인도어풋살장\", \"무료\"],\n            lat: \"37.5795876\",\n            lng: \"126.9636324\",\n        },\n    ],\n    isChangingLocation:false,\n    changeLocationErrorReason:'',\n}\nexport const REFRESH_STADIUMLIST_REQUEST = 'REFRESH_STADIUMLIST_REQUEST';\nexport const REFRESH_STADIUMLIST_SUCCESS = 'REFRESH_STADIUMLIST_SUCCESS';\nexport const REFRESH_STADIUMLIST_FAILURE = 'REFRESH_STADIUMLIST_FAILURE';\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case REFRESH_STADIUMLIST_REQUEST: {\n            return {\n                ...state,\n                latitude: action.data.latitude,\n                longitude: action.data.longitude,\n                isChangingLocation:true,\n            }\n        }\n        case REFRESH_STADIUMLIST_SUCCESS: {\n            return {\n                ...state,\n                isChangingLocation:false,\n                stadiumList:action.data\n            }\n        }\n        case REFRESH_STADIUMLIST_FAILURE: {\n            return {\n                ...state,\n                isChangingLocation:false,\n                changeLocationErrorReason:action.error\n            }\n        }\n        default: {\n            return {\n                ...state,\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}