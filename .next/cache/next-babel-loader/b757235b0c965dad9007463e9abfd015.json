{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { REFRESH_STADIUMLIST_REQUEST } from '../reducers/location';\nimport { notification, message, Card } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nvar Maps = function Maps(props) {\n  var _useSelector = useSelector(function (state) {\n    return state.location;\n  }),\n      latitude = _useSelector.latitude,\n      longitude = _useSelector.longitude;\n\n  var dispatch = useDispatch();\n  var stadiumList = props.list;\n  var options;\n  var temp;\n\n  var _useState = useState(),\n      map = _useState[0],\n      setMap = _useState[1];\n\n  function closeOverlay() {\n    overlay.setMap(null);\n  }\n\n  useEffect(function () {\n    //최초 마운트 시\n    options = {\n      center: new kakao.maps.LatLng(latitude, longitude),\n      level: 8\n    };\n    temp = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n    temp.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n    kakao.maps.event.addListener(temp, 'dragend', function () {\n      var latlng = temp.getCenter();\n      dispatch({\n        type: REFRESH_STADIUMLIST_REQUEST,\n        data: {\n          latitude: latlng.getLat(),\n          longitude: latlng.getLng()\n        }\n      });\n    });\n    setMap(temp);\n\n    if (props.router.query.arr) {\n      var arr = props.router.query.arr.split(\",\");\n\n      if (arr[0] === \"success\") {\n        message.success(arr[1]);\n      } else if (arr[0] === \"warn\") {\n        notification.destroy();\n        notification.open({\n          message: \"현재위치로 탐색하시려면?\",\n          description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\",\n          duration: 0\n        });\n      } else {\n        message.error(arr[1], 4);\n      }\n    }\n  }, []);\n  useEffect(function () {\n    // let bounds = new kakao.maps.LatLngBounds();\n    stadiumList.map(function (c) {\n      var position = new kakao.maps.LatLng(c.lat, c.lng);\n      var marker = new kakao.maps.Marker({\n        map: map === undefined ? temp : map,\n        position: position\n      }); // bounds.extend(position);\n\n      var content = \"<div class=\\\"wrap\\\" style=\\\"background:white\\\"> \\n                    <div class=\\\"info\\\"> \\n                        <div class=\\\"title\\\"> \\n                            \".concat(c.title, \" \\n                            <div class=\\\"close\\\" onclick=\\\"closeOverlay()\\\" title=\\\"\\uB2EB\\uAE30\\\">X</div> \\n                        </div> \\n                        <div class=\\\"body\\\"> \\n                            <div class=\\\"desc\\\"> \\n                                <div class=\\\"ellipsis\\\">\").concat(c.address, \"</div> \\n                                <div>\").concat(__jsx(Link, {\n        href: \"/stadium/[id]\",\n        as: \"/stadium/\".concat(c.req),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 40\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 93\n        }\n      }, \"\\uAD6C\\uC7A5 \\uD655\\uC778\\uD558\\uAE30\")), \"</div> \\n                            </div> \\n                        </div> \\n                    </div> \\n                </div>\");\n      var overlay = new kakao.maps.CustomOverlay({\n        content: content,\n        map: null,\n        position: marker.getPosition()\n      });\n\n      (function (marker, overlay) {\n        kakao.maps.event.addListener(marker, 'click', function () {\n          overlay.setMap(map === undefined ? temp : map);\n        });\n\n        function closeOverlay() {\n          overlay.setMap(null);\n        }\n      })(marker, overlay);\n    }); // temp.setBounds(bounds);\n  }, [stadiumList]);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(LoadingOutlined, {\n    style: {\n      margin: '0 auto',\n      width: '10vh',\n      height: '10vh'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default withRouter(Maps);","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","useState","withRouter","Link","useSelector","useDispatch","REFRESH_STADIUMLIST_REQUEST","notification","message","Card","LoadingOutlined","Maps","props","state","location","latitude","longitude","dispatch","stadiumList","list","options","temp","map","setMap","closeOverlay","overlay","center","kakao","maps","LatLng","level","Map","document","getElementById","addControl","MapTypeControl","ControlPosition","TOPRIGHT","event","addListener","latlng","getCenter","type","data","getLat","getLng","router","query","arr","split","success","destroy","open","description","duration","error","c","position","lat","lng","marker","Marker","undefined","content","title","address","req","CustomOverlay","getPosition","height","textAlign","margin","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { REFRESH_STADIUMLIST_REQUEST } from '../reducers/location';\nimport { notification, message, Card } from 'antd';\nimport { LoadingOutlined,} from '@ant-design/icons';\nconst Maps = (props) => {\n    const { latitude, longitude,} = useSelector(state => state.location);\n    const dispatch = useDispatch();\n    const  stadiumList  = props.list;\n    let options;\n    let temp;\n    const [map, setMap] = useState();\n    function closeOverlay() {\n        overlay.setMap(null);\n    }\n    useEffect(\n        () => {\n            //최초 마운트 시\n            options = {\n                center: new kakao.maps.LatLng(latitude, longitude),\n                level: 8\n            };\n            temp = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n            temp.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n            kakao.maps.event.addListener(temp, 'dragend', function () {\n                let latlng = temp.getCenter();\n                dispatch({ type:REFRESH_STADIUMLIST_REQUEST , data:{latitude: latlng.getLat(), longitude: latlng.getLng()} });\n            });\n            setMap(temp);\n            if (props.router.query.arr) {\n                const arr = props.router.query.arr.split(\",\");\n                if (arr[0] === \"success\") {\n                    message.success(arr[1]);\n                } else if (arr[0] === \"warn\") {\n                    notification.destroy();\n                    notification.open({ message: \"현재위치로 탐색하시려면?\", description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\", duration: 0 })\n                } else {\n                    message.error(arr[1], 4);\n                }\n            }\n        }, []\n    );\n    useEffect(() => {\n        // let bounds = new kakao.maps.LatLngBounds();\n        stadiumList.map((c) => {\n            let position = new kakao.maps.LatLng(c.lat, c.lng);\n            let marker = new kakao.maps.Marker(\n                {\n                    map: (map === undefined) ? temp : map,\n                    position: position\n                }\n            )\n            // bounds.extend(position);\n            let content = `<div class=\"wrap\" style=\"background:white\"> \n                    <div class=\"info\"> \n                        <div class=\"title\"> \n                            ${c.title} \n                            <div class=\"close\" onclick=\"closeOverlay()\" title=\"닫기\">X</div> \n                        </div> \n                        <div class=\"body\"> \n                            <div class=\"desc\"> \n                                <div class=\"ellipsis\">${c.address}</div> \n                                <div>${<Link href=\"/stadium/[id]\" as={`/stadium/${c.req}`} ><a>구장 확인하기</a></Link>}</div> \n                            </div> \n                        </div> \n                    </div> \n                </div>`;\n            let overlay = new kakao.maps.CustomOverlay({\n                content: content,\n                map: null,\n                position: marker.getPosition()\n            });\n\n            (function (marker, overlay) {\n                kakao.maps.event.addListener(marker, 'click', function () {\n                    overlay.setMap((map === undefined) ? temp : map);\n                });\n                \n                function closeOverlay() {\n                    overlay.setMap(null);\n                }\n            })(marker, overlay);\n        })\n        // temp.setBounds(bounds);\n    }, [stadiumList])\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} />\n        </div>\n    );\n};\n\nexport default withRouter(Maps);"]},"metadata":{},"sourceType":"module"}