{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { message, Button, Col, Row } from 'antd';\nimport { LoadingOutlined, SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { getLocation } from '../util/getLocation';\nimport { useSetter } from '../util/useSetter';\n\nvar Maps = function Maps() {\n  var _useSetter = useSetter('37.5795876'),\n      _useSetter2 = _slicedToArray(_useSetter, 2),\n      lat = _useSetter2[0],\n      setLat = _useSetter2[1];\n\n  var _useSetter3 = useSetter('126.9636324'),\n      _useSetter4 = _slicedToArray(_useSetter3, 2),\n      lng = _useSetter4[0],\n      setLng = _useSetter4[1];\n\n  var options;\n  var map;\n  useEffect(function () {\n    //최초 마운트 시\n    // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n    (function _callee() {\n      var arr;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getLocation());\n\n            case 3:\n              arr = _context.sent;\n              console.log(arr);\n              message.destroy();\n\n              if (arr[0] === \"success\") {\n                setLat(arr[2]);\n                setLng(arr[3]);\n                message.success(arr[1]);\n              } else if (arr[0] === \"warn\") {\n                message.warn(arr[1], 4);\n              } else {\n                message.error(arr[1], 4);\n              }\n\n              options = {\n                center: new kakao.maps.LatLng(lat, lng),\n                level: 8\n              };\n              map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n              map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n              kakao.maps.event.addListener(map, 'dragend', function () {\n                var latlng = map.getCenter();\n                setLat(latlng.getLat());\n                setLng(latlng.getLng());\n              });\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    })();\n  }, []);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    align: \"middle\",\n    gutter: {\n      sm: 10,\n      md: 25\n    },\n    style: _defineProperty({\n      height: '100%'\n    }, \"height\", '100%'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    sm: {\n      span: 16,\n      offset: 4\n    },\n    md: {\n      span: 8,\n      offset: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    icon: __jsx(SearchOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 50\n      }\n    }),\n    size: \"large\",\n    shape: \"round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"\\uD604\\uC7AC\\uC704\\uCE58\\uC815\\uBCF4 \\uC774\\uC6A9\\uD558\\uC5EC \\uB458\\uB7EC\\uBCF4\\uAE30\")), __jsx(Col, {\n    sm: {\n      span: 16,\n      offset: 4\n    },\n    md: {\n      span: 8,\n      offset: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    size: \"large\",\n    icon: __jsx(InfoCircleOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 48\n      }\n    }),\n    shape: \"round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"\\uAD6C\\uC7A5 \\uB458\\uB7EC\\uBCF4\\uAE30\"))));\n};\n\nexport default Maps;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","message","Button","Col","Row","LoadingOutlined","SearchOutlined","InfoCircleOutlined","getLocation","useSetter","Maps","lat","setLat","lng","setLng","options","map","arr","console","log","destroy","success","warn","error","center","kakao","maps","LatLng","level","Map","document","getElementById","addControl","MapTypeControl","ControlPosition","TOPRIGHT","event","addListener","latlng","getCenter","getLat","getLng","height","textAlign","sm","md","span","offset"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { message, Button, Col, Row } from 'antd';\nimport { LoadingOutlined, SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { getLocation } from '../util/getLocation';\nimport { useSetter } from '../util/useSetter';\nconst Maps = () => {\n    const [lat, setLat] = useSetter('37.5795876');\n    const [lng, setLng] = useSetter('126.9636324');\n    let options;\n    let map;\n    useEffect(\n        () => {\n            //최초 마운트 시\n            // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n            (async () => {\n                try {\n                    const arr = await getLocation();\n                    console.log(arr);\n                    message.destroy();\n                    if (arr[0] === \"success\") {\n                        setLat(arr[2]);\n                        setLng(arr[3]);\n                        message.success(arr[1]);\n                    } else if (arr[0] === \"warn\") {\n                        message.warn(arr[1], 4);\n                    } else {\n                        message.error(arr[1], 4);\n                    }\n                    options = {\n                        center: new kakao.maps.LatLng(lat, lng),\n                        level: 8\n                    };\n                    map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n                    map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n                    kakao.maps.event.addListener(map, 'dragend', function () {\n                        let latlng = map.getCenter();\n                        setLat(latlng.getLat());\n                        setLng(latlng.getLng());\n                    });\n                } catch (error) {\n                    console.log(error);\n                }\n\n            })();\n        }, []\n    );\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            {/* <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} /> */}\n            <Row align=\"middle\" gutter={{ sm: 10, md: 25 }} style={{ height: '100%', height: '100%' }}>\n                <Col sm={{ span: 16, offset: 4 }} md={{ span: 8, offset: 4 }}>\n                    <Button type=\"primary\" icon={<SearchOutlined />} size=\"large\" shape=\"round\">현재위치정보 이용하여 둘러보기</Button>\n                </Col>\n                <Col sm={{ span: 16, offset: 4 }} md={{ span: 8, offset: 4 }}>\n                    <Button size=\"large\" icon={<InfoCircleOutlined />} shape=\"round\">구장 둘러보기</Button>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}