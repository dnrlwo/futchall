{"ast":null,"code":"var _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { message, Button, Col, Row } from 'antd';\nimport { LoadingOutlined, SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { getLocation } from '../util/getLocation';\nimport { useSetter } from '../util/useSetter';\n\nconst Maps = () => {\n  const [lat, setLat] = useSetter('37.5795876');\n  const [lng, setLng] = useSetter('126.9636324');\n  let options;\n  let map;\n  useEffect(() => {\n    //최초 마운트 시\n    // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n    options = {\n      center: new kakao.maps.LatLng(lat, lng),\n      level: 8\n    };\n    map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n    map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n    kakao.maps.event.addListener(map, 'dragend', function () {\n      let latlng = map.getCenter();\n      setLat(latlng.getLat());\n      setLng(latlng.getLng());\n    }); // (async () => {\n    //     try {\n    //         const arr = await getLocation();\n    //         console.log(arr);\n    //         message.destroy();\n    //         if (arr[0] === \"success\") {\n    //             setLat(arr[2]);\n    //             setLng(arr[3]);\n    //             message.success(arr[1]);\n    //         } else if (arr[0] === \"warn\") {\n    //             message.warn(arr[1], 4);\n    //         } else {\n    //             message.error(arr[1], 4);\n    //         }\n    //         options = {\n    //             center: new kakao.maps.LatLng(lat, lng),\n    //             level: 8\n    //         };\n    //         map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n    //         map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n    //         kakao.maps.event.addListener(map, 'dragend', function () {\n    //             let latlng = map.getCenter();\n    //             setLat(latlng.getLat());\n    //             setLng(latlng.getLng());\n    //         });\n    //     } catch (error) {\n    //         console.log(error);\n    //     }\n    // })();\n  }, []);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(LoadingOutlined, {\n    style: {\n      margin: '0 auto',\n      width: '10vh',\n      height: '10vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Maps;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","message","Button","Col","Row","LoadingOutlined","SearchOutlined","InfoCircleOutlined","getLocation","useSetter","Maps","lat","setLat","lng","setLng","options","map","center","kakao","maps","LatLng","level","Map","document","getElementById","addControl","MapTypeControl","ControlPosition","TOPRIGHT","event","addListener","latlng","getCenter","getLat","getLng","height","textAlign","margin","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA0C,MAA1C;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,kBAA1C,QAAoE,mBAApE;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AACA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,SAAS,CAAC,YAAD,CAA/B;AACA,QAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBL,SAAS,CAAC,aAAD,CAA/B;AACA,MAAIM,OAAJ;AACA,MAAIC,GAAJ;AACAhB,EAAAA,SAAS,CACL,MAAM;AACF;AACA;AACAe,IAAAA,OAAO,GAAG;AACNE,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBT,GAAtB,EAA2BE,GAA3B,CADF;AAENQ,MAAAA,KAAK,EAAE;AAFD,KAAV;AAIAL,IAAAA,GAAG,GAAG,IAAIE,KAAK,CAACC,IAAN,CAAWG,GAAf,CAAmBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB,EAA4DT,OAA5D,CAAN;AACAC,IAAAA,GAAG,CAACS,UAAJ,CAAe,IAAIP,KAAK,CAACC,IAAN,CAAWO,cAAf,EAAf,EAAgDR,KAAK,CAACC,IAAN,CAAWQ,eAAX,CAA2BC,QAA3E;AACAV,IAAAA,KAAK,CAACC,IAAN,CAAWU,KAAX,CAAiBC,WAAjB,CAA6Bd,GAA7B,EAAkC,SAAlC,EAA6C,YAAY;AACrD,UAAIe,MAAM,GAAGf,GAAG,CAACgB,SAAJ,EAAb;AACApB,MAAAA,MAAM,CAACmB,MAAM,CAACE,MAAP,EAAD,CAAN;AACAnB,MAAAA,MAAM,CAACiB,MAAM,CAACG,MAAP,EAAD,CAAN;AACH,KAJD,EATE,CAcF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACH,GA7CI,EA6CF,EA7CE,CAAT;AA+CA,SACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,KAAK,EAAE,MAA3B;AAAmCH,MAAAA,MAAM,EAAE;AAA3C,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAeH,CAnED;;AAqEA,eAAezB,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { message, Button, Col, Row } from 'antd';\nimport { LoadingOutlined, SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { getLocation } from '../util/getLocation';\nimport { useSetter } from '../util/useSetter';\nconst Maps = () => {\n    const [lat, setLat] = useSetter('37.5795876');\n    const [lng, setLng] = useSetter('126.9636324');\n    let options;\n    let map;\n    useEffect(\n        () => {\n            //최초 마운트 시\n            // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n            options = {\n                center: new kakao.maps.LatLng(lat, lng),\n                level: 8\n            };\n            map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n            map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n            kakao.maps.event.addListener(map, 'dragend', function () {\n                let latlng = map.getCenter();\n                setLat(latlng.getLat());\n                setLng(latlng.getLng());\n            });\n            // (async () => {\n            //     try {\n            //         const arr = await getLocation();\n            //         console.log(arr);\n            //         message.destroy();\n            //         if (arr[0] === \"success\") {\n            //             setLat(arr[2]);\n            //             setLng(arr[3]);\n            //             message.success(arr[1]);\n            //         } else if (arr[0] === \"warn\") {\n            //             message.warn(arr[1], 4);\n            //         } else {\n            //             message.error(arr[1], 4);\n            //         }\n            //         options = {\n            //             center: new kakao.maps.LatLng(lat, lng),\n            //             level: 8\n            //         };\n            //         map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n            //         map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n            //         kakao.maps.event.addListener(map, 'dragend', function () {\n            //             let latlng = map.getCenter();\n            //             setLat(latlng.getLat());\n            //             setLng(latlng.getLng());\n            //         });\n            //     } catch (error) {\n            //         console.log(error);\n            //     }\n\n            // })();\n        }, []\n    );\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} />\n            {/* <Row align=\"middle\" gutter={{ sm: 5, md: 5 }} style={{ height: '100%', height: '100%' }}>\n                <Col xs={{ span: 16, offset: 4 }}>\n                    <Button type=\"primary\" icon={<SearchOutlined />} size=\"large\" shape=\"round\">현재위치정보 이용하여 둘러보기</Button>\n                    <br />\n                    <Button size=\"large\" icon={<InfoCircleOutlined />} shape=\"round\">구장 둘러보기</Button>\n                </Col>\n                <Col xs={{ span: 16, offset: 4 }}>\n\n                </Col>\n            </Row> */}\n        </div>\n    );\n};\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}