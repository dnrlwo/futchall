{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport function getLocation() {\n  return _regeneratorRuntime.async(function getLocation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n            if (navigator.geolocation) {\n              navigator.geolocation.getCurrentPosition(function (pos) {\n                resolve([\"success\", \"현재 접속위치를 중심으로 지도를 활성화하였습니다.\", pos.coords.latitude, pos.coords.longitude]);\n              }, function (pos) {\n                console.log(pos);\n                resolve([\"warn\", \"위치정보제공을 동의하고 현재위치 주변 구장을 확인하세요.\"]);\n              });\n            } else {\n              resolve([\"error\", \"현재 브라우저에서는 현재위치 사용이 불가능합니다.\"]);\n            }\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/util/getLocation.js"],"names":["getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","console","log"],"mappings":";AAAA,OAAO,SAAeA,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC1C,gBAAIC,SAAS,CAACC,WAAd,EAA2B;AACvBD,cAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAUC,GAAV,EAAe;AACpDL,gBAAAA,OAAO,CAAC,CAAC,SAAD,EAAY,6BAAZ,EAA2CK,GAAG,CAACC,MAAJ,CAAWC,QAAtD,EAAgEF,GAAG,CAACC,MAAJ,CAAWE,SAA3E,CAAD,CAAP;AACH,eAFD,EAEG,UAAUH,GAAV,EAAe;AACdI,gBAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAL,gBAAAA,OAAO,CAAC,CAAC,MAAD,EAAS,iCAAT,CAAD,CAAP;AACH,eALD;AAMH,aAPD,MAOO;AACHA,cAAAA,OAAO,CAAC,CAAC,OAAD,EAAU,6BAAV,CAAD,CAAP;AACH;AACJ,WAXY,CADV;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaN","sourcesContent":["export async function getLocation() {\n    return await new Promise((resolve, reject) => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function (pos) {\n                resolve([\"success\", \"현재 접속위치를 중심으로 지도를 활성화하였습니다.\", pos.coords.latitude, pos.coords.longitude]);\n            }, function (pos) {\n                console.log(pos);\n                resolve([\"warn\", \"위치정보제공을 동의하고 현재위치 주변 구장을 확인하세요.\"]);\n            });\n        } else {\n            resolve([\"error\", \"현재 브라우저에서는 현재위치 사용이 불가능합니다.\"]);\n        }\n    });\n};"]},"metadata":{},"sourceType":"module"}