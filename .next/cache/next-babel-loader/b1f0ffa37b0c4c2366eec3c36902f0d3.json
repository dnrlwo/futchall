{"ast":null,"code":"var _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { getLocation } from '../util/getLocation';\nimport { useSetter } from '../util/useSetter';\n\nconst Maps = () => {\n  const [lat, setLat] = useSetter('37.5795876');\n  const [lng, setLng] = useSetter('126.9636324');\n  let options;\n  let map;\n  useEffect(() => {\n    //최초 마운트 시\n    // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n    (async () => {\n      try {\n        const arr = await getLocation();\n        await console.log(arr);\n        await (() => {\n          if (arr[0] === \"success\") {\n            setLat(arr[2]);\n            setLng(arr[3]);\n            message.success(arr[1]);\n          } else if (arr[0] === \"warn\") {\n            message.warn(arr[1], 4);\n          } else {\n            message.error(arr[1], 4);\n          }\n\n          options = {\n            center: new kakao.maps.LatLng(lat, lng),\n            level: 5\n          };\n          map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n          map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n          kakao.maps.event.addListener(map, 'dragend', function () {\n            let latlng = map.getCenter();\n            setLat(latlng.getLat());\n            setLng(latlng.getLng());\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(LoadingOutlined, {\n    style: {\n      margin: '0 auto',\n      width: '10vh',\n      height: '10vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Maps;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","message","LoadingOutlined","getLocation","useSetter","Maps","lat","setLat","lng","setLng","options","map","arr","console","log","success","warn","error","center","kakao","maps","LatLng","level","Map","document","getElementById","addControl","MapTypeControl","ControlPosition","TOPRIGHT","event","addListener","latlng","getCenter","getLat","getLng","height","textAlign","margin","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { getLocation } from '../util/getLocation';\nimport { useSetter } from '../util/useSetter';\nconst Maps = () => {\n    const [lat, setLat] = useSetter('37.5795876');\n    const [lng, setLng] = useSetter('126.9636324');\n    let options;\n    let map;\n    useEffect(\n        () => {\n            //최초 마운트 시\n            // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n            (async () => {\n                try {\n                    const arr = await getLocation();\n                    await console.log(arr);\n                    await (() => {\n                        if (arr[0] === \"success\") {\n                            setLat(arr[2]);\n                            setLng(arr[3]);\n                            message.success(arr[1]);\n                        } else if (arr[0] === \"warn\") {\n                            message.warn(arr[1], 4);\n                        } else {\n                            message.error(arr[1], 4);\n                        }\n                        options = {\n                            center: new kakao.maps.LatLng(lat, lng),\n                            level: 5\n                        };\n                        map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n                        map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n                        kakao.maps.event.addListener(map, 'dragend', function () {\n                            let latlng = map.getCenter();\n                            setLat(latlng.getLat());\n                            setLng(latlng.getLng());\n                        });\n                    })\n\n                } catch (error) {\n                    console.log(error);\n                }\n\n            })();\n        }, []\n    );\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} />\n        </div>\n    );\n};\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}