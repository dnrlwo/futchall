{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/util/makeMarker.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nvar displayMarker = function displayMarker(data, map) {\n  var marker = new kakao.maps.Marker({\n    map: map,\n    position: new kakao.maps.LatLng(data.latitude, data.longitude)\n  });\n\n  var content = __jsx(Card, {\n    style: {\n      width: '280px'\n    },\n    actions: [__jsx(CloseOutlined, {\n      key: \"close\",\n      onClick: closeOverlay(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 62\n      }\n    })],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 19\n    }\n  }, __jsx(Card.Meta, {\n    title: data.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 119\n    }\n  }));\n\n  var overlay = new kakao.maps.CustomOverlay({\n    content: content,\n    map: null,\n    position: marker.getPosition()\n  });\n\n  (function (marker, overlay) {\n    kakao.maps.event.addListener(marker, 'click', function () {\n      overlay.setMap(map);\n    });\n\n    function closeOverlay() {\n      overlay.setMap(null);\n    }\n  })(marker, overlay);\n};\n\nexport default makeMarker = function makeMarker(data, map) {\n  return data.map(displayMarker(data, map)); //마커들의 배열\n};","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/util/makeMarker.js"],"names":["React","Card","CloseOutlined","displayMarker","data","map","marker","kakao","maps","Marker","position","LatLng","latitude","longitude","content","width","closeOverlay","title","overlay","CustomOverlay","getPosition","event","addListener","setMap","makeMarker"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,GAAP,EAAe;AACjC,MAAIC,MAAM,GAAG,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CACT;AACIJ,IAAAA,GAAG,EAAEA,GADT;AAEIK,IAAAA,QAAQ,EAAE,IAAIH,KAAK,CAACC,IAAN,CAAWG,MAAf,CAAsBP,IAAI,CAACQ,QAA3B,EAAqCR,IAAI,CAACS,SAA1C;AAFd,GADS,CAAb;;AAMA,MAAIC,OAAO,GAAG,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAiC,IAAA,OAAO,EAAE,CAAC,MAAC,aAAD;AAAe,MAAA,GAAG,EAAC,OAAnB;AAA2B,MAAA,OAAO,EAAEC,YAAY,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoG,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAEZ,IAAI,CAACa,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApG,CAAd;;AACA,MAAIC,OAAO,GAAG,IAAIX,KAAK,CAACC,IAAN,CAAWW,aAAf,CAA6B;AACvCL,IAAAA,OAAO,EAAEA,OAD8B;AAEvCT,IAAAA,GAAG,EAAE,IAFkC;AAGvCK,IAAAA,QAAQ,EAAEJ,MAAM,CAACc,WAAP;AAH6B,GAA7B,CAAd;;AAKA,GAAC,UAAUd,MAAV,EAAkBY,OAAlB,EAA2B;AACxBX,IAAAA,KAAK,CAACC,IAAN,CAAWa,KAAX,CAAiBC,WAAjB,CAA6BhB,MAA7B,EAAqC,OAArC,EAA8C,YAAY;AACtDY,MAAAA,OAAO,CAACK,MAAR,CAAelB,GAAf;AACH,KAFD;;AAGA,aAASW,YAAT,GAAwB;AACpBE,MAAAA,OAAO,CAACK,MAAR,CAAe,IAAf;AACH;AACJ,GAPD,EAOGjB,MAPH,EAOWY,OAPX;AAQH,CArBD;;AAuBA,eAAeM,UAAU,GAAG,oBAACpB,IAAD,EAAOC,GAAP,EAAe;AACvC,SAAOD,IAAI,CAACC,GAAL,CAASF,aAAa,CAACC,IAAD,EAAOC,GAAP,CAAtB,CAAP,CADuC,CACI;AAC9C,CAFD","sourcesContent":["import React from 'react';\nimport { Card } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nconst displayMarker = (data, map) => {\n    let marker = new kakao.maps.Marker(\n        {\n            map: map,\n            position: new kakao.maps.LatLng(data.latitude, data.longitude)\n        }\n    )\n    let content = <Card style={{ width: '280px' }} actions={[<CloseOutlined key=\"close\" onClick={closeOverlay()} />]}><Card.Meta title={data.title} /></Card>;\n    let overlay = new kakao.maps.CustomOverlay({\n        content: content,\n        map: null,\n        position: marker.getPosition()\n    });\n    (function (marker, overlay) {\n        kakao.maps.event.addListener(marker, 'click', function () {\n            overlay.setMap(map);\n        });\n        function closeOverlay() {\n            overlay.setMap(null);\n        }\n    })(marker, overlay);\n}\n\nexport default makeMarker = (data, map) => {\n    return data.map(displayMarker(data, map)); //마커들의 배열\n}"]},"metadata":{},"sourceType":"module"}