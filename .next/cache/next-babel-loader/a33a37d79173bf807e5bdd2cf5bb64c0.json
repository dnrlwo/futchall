{"ast":null,"code":"var _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/StadiumComment.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Comment, List, Avatar, Form, Button, Input, Rate } from 'antd';\nimport { ADD_COMMENT_REQUEST } from '../reducers/stadium';\n\nconst CommentList = ({\n  comments\n}) => __jsx(List, {\n  dataSource: comments,\n  itemLayout: \"horizontal\",\n  renderItem: props => __jsx(Comment, _extends({}, props, {\n    avatar: props.profile,\n    actions: [__jsx(Rate, {\n      disabled: true,\n      defaultValue: props.rating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 83\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 30\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n});\n\nconst Editor = ({\n  onChange,\n  onSubmit,\n  isAddingComment,\n  value\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, __jsx(Form.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, __jsx(Input.TextArea, {\n  rows: 4,\n  onChange: onChange,\n  value: value,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n})), __jsx(Form.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, __jsx(Button, {\n  htmlType: \"submit\",\n  loading: isAddingComment,\n  onClick: onSubmit,\n  type: \"primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n}, \"\\uB4F1\\uB85D\")));\n\nconst StadiumComment = () => {\n  const dispatch = useDispatch();\n  const {\n    comments,\n    isAddingComment,\n    isAddedComment\n  } = useSelector(state => state.stadium);\n  const {\n    isLoggedIn,\n    me\n  } = useSelector(state => state.user);\n  const {\n    0: comment,\n    1: onChangeComment\n  } = useState('');\n\n  const handleSubmit = () => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        datetime: new Date().toLocaleString(),\n        content: comment,\n        avatar: me.nickname,\n        author: me.nickname,\n        rating: 5\n      }\n    });\n  };\n\n  const handleChange = e => {\n    onChangeComment(e.target.value);\n  };\n\n  useEffect(() => {\n    if (isAddedComment) {\n      onChangeComment('');\n    }\n  }, [isAddedComment]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(Comment, {\n    avatar: isLoggedIn && __jsx(Avatar, {\n      shape: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }, me.nickname),\n    content: isLoggedIn && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, __jsx(Input.TextArea, {\n      rows: 4,\n      onChange: handleChange,\n      value: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    })), __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      htmlType: \"submit\",\n      loading: isAddingComment,\n      onClick: handleSubmit,\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \"\\uB4F1\\uB85D\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), comments.length > 0 && __jsx(CommentList, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }));\n};\n\nexport default StadiumComment;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/StadiumComment.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Comment","List","Avatar","Form","Button","Input","Rate","ADD_COMMENT_REQUEST","CommentList","comments","props","profile","rating","Editor","onChange","onSubmit","isAddingComment","value","StadiumComment","dispatch","isAddedComment","state","stadium","isLoggedIn","me","user","comment","onChangeComment","handleSubmit","type","data","datetime","Date","toLocaleString","content","avatar","nickname","author","handleChange","e","target","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {Comment, List, Avatar, Form, Button, Input, Rate} from 'antd';\nimport {ADD_COMMENT_REQUEST} from '../reducers/stadium'\n\nconst CommentList = ({ comments }) => (\n    <List\n        dataSource={comments}\n        itemLayout=\"horizontal\"\n        renderItem={props => <Comment {...props} avatar={props.profile} actions={[<Rate disabled defaultValue={props.rating}></Rate>]} />}\n    />\n);\n\nconst Editor = ({ onChange, onSubmit, isAddingComment, value }) => (\n    <div>\n        <Form.Item>\n            <Input.TextArea rows={4} onChange={onChange} value={value} />\n        </Form.Item>\n        <Form.Item>\n            <Button htmlType=\"submit\" loading={isAddingComment} onClick={onSubmit} type=\"primary\">\n                등록\n            </Button>\n        </Form.Item>\n    </div>\n);\n\nconst StadiumComment = () =>{\n    const dispatch = useDispatch();\n    const { comments, isAddingComment, isAddedComment } = useSelector(state=> state.stadium);\n    const { isLoggedIn, me } = useSelector(state => state.user);\n    const [comment, onChangeComment] = useState('');\n\n    const handleSubmit = ()=>{\n        dispatch({\n            type:ADD_COMMENT_REQUEST,\n            data:{\n                datetime: new Date().toLocaleString(),\n                content: comment,\n                avatar:me.nickname,\n                author:me.nickname,\n                rating:5,\n            }\n        });\n    }\n    const handleChange= (e)=>{\n        onChangeComment(e.target.value);\n    }\n    useEffect(()=>{\n        if(isAddedComment){\n            onChangeComment('');\n        }\n    },[isAddedComment])\n    return(\n        <div>\n            <Comment\n            avatar = {isLoggedIn && <Avatar shape=\"circle\">{me.nickname}</Avatar> }\n            content = {\n                isLoggedIn &&\n                <div>\n                    <Form.Item>\n                        <Input.TextArea rows={4} onChange={handleChange} value={comment} />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button htmlType=\"submit\" loading={isAddingComment} onClick={handleSubmit} type=\"primary\">\n                            등록\n                        </Button>\n                    </Form.Item>\n                </div>\n            }\n            />\n            {comments.length > 0 && <CommentList comments={comments} />}\n        </div>\n    );\n}\nexport default StadiumComment;"]},"metadata":{},"sourceType":"module"}