{"ast":null,"code":"var _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/util/makeMarker.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nconst displayMarker = (data, map) => {\n  let marker = new kakao.maps.Marker({\n    map: map,\n    position: new kakao.maps.LatLng(data.latitude, data.longitude)\n  });\n\n  let content = __jsx(Card, {\n    style: {\n      width: '280px'\n    },\n    actions: [__jsx(CloseOutlined, {\n      key: \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 62\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 19\n    }\n  }, __jsx(Card.Meta, {\n    title: data.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 95\n    }\n  }));\n\n  let overlay = new kakao.maps.CustomOverlay({\n    content: content,\n    map: null,\n    position: marker.getPosition()\n  });\n\n  (function (marker, overlay) {\n    kakao.maps.event.addListener(marker, 'click', function () {\n      overlay.setMap(map);\n    });\n\n    function closeOverlay() {\n      overlay.setMap(null);\n    }\n  })(marker, overlay);\n};\n\nexport const makeMarker = (data, map) => {\n  return data.map(displayMarker(data, map)); //마커들의 배열\n};","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/util/makeMarker.js"],"names":["React","Card","CloseOutlined","displayMarker","data","map","marker","kakao","maps","Marker","position","LatLng","latitude","longitude","content","width","title","overlay","CustomOverlay","getPosition","event","addListener","setMap","closeOverlay","makeMarker"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AACjC,MAAIC,MAAM,GAAG,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CACT;AACIJ,IAAAA,GAAG,EAAEA,GADT;AAEIK,IAAAA,QAAQ,EAAE,IAAIH,KAAK,CAACC,IAAN,CAAWG,MAAf,CAAsBP,IAAI,CAACQ,QAA3B,EAAqCR,IAAI,CAACS,SAA1C;AAFd,GADS,CAAb;;AAMA,MAAIC,OAAO,GAAG,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAiC,IAAA,OAAO,EAAE,CAAC,MAAC,aAAD;AAAe,MAAA,GAAG,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4E,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAEX,IAAI,CAACY,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5E,CAAd;;AACA,MAAIC,OAAO,GAAG,IAAIV,KAAK,CAACC,IAAN,CAAWU,aAAf,CAA6B;AACvCJ,IAAAA,OAAO,EAAEA,OAD8B;AAEvCT,IAAAA,GAAG,EAAE,IAFkC;AAGvCK,IAAAA,QAAQ,EAAEJ,MAAM,CAACa,WAAP;AAH6B,GAA7B,CAAd;;AAKA,GAAC,UAAUb,MAAV,EAAkBW,OAAlB,EAA2B;AACxBV,IAAAA,KAAK,CAACC,IAAN,CAAWY,KAAX,CAAiBC,WAAjB,CAA6Bf,MAA7B,EAAqC,OAArC,EAA8C,YAAY;AACtDW,MAAAA,OAAO,CAACK,MAAR,CAAejB,GAAf;AACH,KAFD;;AAGA,aAASkB,YAAT,GAAwB;AACpBN,MAAAA,OAAO,CAACK,MAAR,CAAe,IAAf;AACH;AACJ,GAPD,EAOGhB,MAPH,EAOWW,OAPX;AAQH,CArBD;;AAuBA,OAAO,MAAMO,UAAU,GAAG,CAACpB,IAAD,EAAOC,GAAP,KAAe;AACrC,SAAOD,IAAI,CAACC,GAAL,CAASF,aAAa,CAACC,IAAD,EAAOC,GAAP,CAAtB,CAAP,CADqC,CACM;AAC9C,CAFM","sourcesContent":["import React from 'react';\nimport { Card } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nconst displayMarker = (data, map) => {\n    let marker = new kakao.maps.Marker(\n        {\n            map: map,\n            position: new kakao.maps.LatLng(data.latitude, data.longitude)\n        }\n    )\n    let content = <Card style={{ width: '280px' }} actions={[<CloseOutlined key=\"close\"  />]}><Card.Meta title={data.title} /></Card>;\n    let overlay = new kakao.maps.CustomOverlay({\n        content: content,\n        map: null,\n        position: marker.getPosition()\n    });\n    (function (marker, overlay) {\n        kakao.maps.event.addListener(marker, 'click', function () {\n            overlay.setMap(map);\n        });\n        function closeOverlay() {\n            overlay.setMap(null);\n        }\n    })(marker, overlay);\n}\n\nexport const makeMarker = (data, map) => {\n    return data.map(displayMarker(data, map)); //마커들의 배열\n}"]},"metadata":{},"sourceType":"module"}