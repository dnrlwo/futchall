{"ast":null,"code":"var _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useLayoutEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeLocationAction } from '../reducers/location';\nimport { notification, message, Card } from 'antd';\nimport { LoadingOutlined, CloseOutlined } from '@ant-design/icons';\n\nconst Maps = props => {\n  const {\n    latitude,\n    longitude,\n    stadiumList\n  } = useSelector(state => state.location);\n  const dispatch = useDispatch();\n  let options; // let map;\n\n  const {\n    0: map,\n    1: setMap\n  } = useState();\n  useEffect(() => {\n    //최초 마운트 시\n    options = {\n      center: new kakao.maps.LatLng(latitude, longitude),\n      level: 8\n    };\n    let temp = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n    temp.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n    kakao.maps.event.addListener(temp, 'dragend', function () {\n      let latlng = temp.getCenter();\n      dispatch(changeLocationAction({\n        latitude: latlng.getLat(),\n        longitude: latlng.getLng()\n      }));\n    });\n    setMap(temp);\n\n    if (props.router.query.arr) {\n      const arr = props.router.query.arr.split(\",\");\n\n      if (arr[0] === \"success\") {\n        message.success(arr[1]);\n      } else if (arr[0] === \"warn\") {\n        notification.destroy();\n        notification.open({\n          message: \"현재위치로 탐색하시려면?\",\n          description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\",\n          duration: 0\n        });\n      } else {\n        message.error(arr[1], 4);\n      }\n    }\n  }, []);\n  useLayoutEffect(() => {\n    stadiumList.map(c => {\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(c.lat, c.lng)\n      });\n      let content = '<div class=\"wrap\">' + '    <div class=\"info\">' + '        <div class=\"title\">' + '            카카오 스페이스닷원' + '            <div class=\"close\" onclick=\"closeOverlay()\" title=\"닫기\"></div>' + '        </div>' + '        <div class=\"body\">' + '            <div class=\"img\">' + '           </div>' + '            <div class=\"desc\">' + '                <div class=\"ellipsis\">제주특별자치도 제주시 첨단로 242</div>' + '                <div class=\"jibun ellipsis\">(우) 63309 (지번) 영평동 2181</div>' + '                <div><a href=\"https://www.kakaocorp.com/main\" target=\"_blank\" class=\"link\">홈페이지</a></div>' + '            </div>' + '        </div>' + '    </div>' + '</div>';\n      let overlay = new kakao.maps.CustomOverlay({\n        content: content,\n        map: null,\n        position: marker.getPosition()\n      });\n\n      (function (marker, overlay) {\n        kakao.maps.event.addListener(marker, 'click', function () {\n          overlay.setMap(map);\n        });\n\n        function closeOverlay() {\n          overlay.setMap(null);\n        }\n      })(marker, overlay);\n    });\n  }, [stadiumList]);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(LoadingOutlined, {\n    style: {\n      margin: '0 auto',\n      width: '10vh',\n      height: '10vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default withRouter(Maps);","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","useState","useLayoutEffect","withRouter","useSelector","useDispatch","changeLocationAction","notification","message","Card","LoadingOutlined","CloseOutlined","Maps","props","latitude","longitude","stadiumList","state","location","dispatch","options","map","setMap","center","kakao","maps","LatLng","level","temp","Map","document","getElementById","addControl","MapTypeControl","ControlPosition","TOPRIGHT","event","addListener","latlng","getCenter","getLat","getLng","router","query","arr","split","success","destroy","open","description","duration","error","c","marker","Marker","position","lat","lng","content","overlay","CustomOverlay","getPosition","closeOverlay","height","textAlign","margin","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useLayoutEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeLocationAction } from '../reducers/location';\nimport { notification, message, Card } from 'antd';\nimport { LoadingOutlined, CloseOutlined } from '@ant-design/icons';\nconst Maps = (props) => {\n    const { latitude, longitude, stadiumList } = useSelector(state => state.location);\n    const dispatch = useDispatch();\n    let options;\n    // let map;\n    const [map, setMap] = useState();\n    useEffect(\n        () => {\n            //최초 마운트 시\n            options = {\n                center: new kakao.maps.LatLng(latitude, longitude),\n                level: 8\n            };\n            let temp = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n            temp.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n            kakao.maps.event.addListener(temp, 'dragend', function () {\n                let latlng = temp.getCenter();\n                dispatch(changeLocationAction({ latitude: latlng.getLat(), longitude: latlng.getLng(), }));\n            });\n            setMap(temp);\n            if (props.router.query.arr) {\n                const arr = props.router.query.arr.split(\",\");\n                if (arr[0] === \"success\") {\n                    message.success(arr[1]);\n                } else if (arr[0] === \"warn\") {\n                    notification.destroy();\n                    notification.open({ message: \"현재위치로 탐색하시려면?\", description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\", duration: 0 })\n                } else {\n                    message.error(arr[1], 4);\n                }\n            }\n        }, []\n    );\n    useLayoutEffect(() => {\n        stadiumList.map((c) => {\n            var marker = new kakao.maps.Marker(\n                {\n                    map: map,\n                    position: new kakao.maps.LatLng(c.lat, c.lng)\n                }\n            )\n            let content = '<div class=\"wrap\">' +\n                '    <div class=\"info\">' +\n                '        <div class=\"title\">' +\n                '            카카오 스페이스닷원' +\n                '            <div class=\"close\" onclick=\"closeOverlay()\" title=\"닫기\"></div>' +\n                '        </div>' +\n                '        <div class=\"body\">' +\n                '            <div class=\"img\">' +\n                '           </div>' +\n                '            <div class=\"desc\">' +\n                '                <div class=\"ellipsis\">제주특별자치도 제주시 첨단로 242</div>' +\n                '                <div class=\"jibun ellipsis\">(우) 63309 (지번) 영평동 2181</div>' +\n                '                <div><a href=\"https://www.kakaocorp.com/main\" target=\"_blank\" class=\"link\">홈페이지</a></div>' +\n                '            </div>' +\n                '        </div>' +\n                '    </div>' +\n                '</div>';\n            let overlay = new kakao.maps.CustomOverlay({\n                content: content,\n                map: null,\n                position: marker.getPosition()\n            });\n\n            (function (marker, overlay) {\n                kakao.maps.event.addListener(marker, 'click', function () {\n                    overlay.setMap(map);\n                });\n                function closeOverlay() {\n                    overlay.setMap(null);\n                }\n            })(marker, overlay);\n        })\n    }, [stadiumList])\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} />\n        </div>\n    );\n};\n\nexport default withRouter(Maps);"]},"metadata":{},"sourceType":"module"}