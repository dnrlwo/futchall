{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { Button, Input, Modal, Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nvar LoginForm = function LoginForm(props) {\n  _s();\n\n  var visible = props.visible,\n      setVisible = props.setVisible;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggingIn = _useSelector.isLoggingIn,\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (isLoggedIn) {\n      setVisible(false);\n      form.resetFields([\"id\", \"password\"]);\n    }\n  }, [isLoggedIn]);\n\n  var onHandleCancel = function onHandleCancel() {\n    setVisible(false);\n  };\n\n  var onSubmitForm = useCallback(function () {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: form.getFieldsValue([\"id\", \"password\"])\n    });\n  }, []);\n  var formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n  return __jsx(Modal, {\n    title: \"FutChall\\uB85C\\uADF8\\uC778\",\n    visible: visible,\n    onOk: onSubmitForm,\n    onCancel: onHandleCancel,\n    centered: \"true\",\n    footer: [__jsx(Button, {\n      key: \"back\",\n      onClick: onHandleCancel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"\\uB4A4\\uB85C\\uAC00\\uAE30\"), __jsx(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      loading: isLoggingIn,\n      onClick: onSubmitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"\\uB85C\\uADF8\\uC778\")],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    layout: \"horizontal\",\n    form: form,\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Item, {\n    name: \"id\",\n    label: \"\\uC544\\uC774\\uB514\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    placeholder: \"\\uC544\\uC774\\uB514\",\n    prefix: __jsx(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 54\n      }\n    }),\n    autoFocus: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    type: \"password\",\n    prefix: __jsx(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 71\n      }\n    }),\n    onPressEnter: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }))));\n};\n\n_s(LoginForm, \"t/7ozcGhzYzQMnQp8zYmnPGGk1g=\", false, function () {\n  return [useSelector, Form.useForm, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/LoginForm.js"],"names":["React","useCallback","useEffect","Button","Input","Modal","Form","useDispatch","useSelector","LOG_IN_REQUEST","UserOutlined","LockOutlined","LoginForm","props","visible","setVisible","state","user","isLoggingIn","isLoggedIn","useForm","form","dispatch","resetFields","onHandleCancel","onSubmitForm","type","data","getFieldsValue","formItemLayout","labelCol","span","wrapperCol"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect,} from 'react';\nimport { Button, Input, Modal, Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nconst LoginForm = (props) => {\n    \n    const { visible, setVisible } = props;\n    const { isLoggingIn, isLoggedIn } = useSelector(state => state.user);\n    const [form] = Form.useForm();\n    const dispatch = useDispatch();\n\n    useEffect(\n        ()=>{\n            if(isLoggedIn){\n                setVisible(false);\n                form.resetFields([\"id\", \"password\"]);\n            }\n        },[isLoggedIn]\n    )\n    const onHandleCancel = (() => {\n        setVisible(false);\n    })\n    const onSubmitForm = useCallback(() => {\n        dispatch({\n            type: LOG_IN_REQUEST,\n            data: form.getFieldsValue([\"id\",\"password\"]),\n        });\n    }, []);\n\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    };\n    return (\n        <Modal\n            title=\"FutChall로그인\"\n            visible={visible}\n            onOk={onSubmitForm}\n            onCancel={onHandleCancel}\n            centered=\"true\"\n            footer={[\n                <Button key=\"back\" onClick={onHandleCancel}>\n                    뒤로가기\n                </Button>,\n                <Button key=\"submit\" type=\"primary\" loading={isLoggingIn} onClick={onSubmitForm}>\n                    로그인\n                </Button>,\n            ]}\n        >\n            <Form\n            {...formItemLayout}\n            layout=\"horizontal\"\n            form={form}\n            onFinish={onSubmitForm}\n            >\n                <Form.Item\n                name=\"id\"\n                label=\"아이디\"\n                >\n                    <Input placeholder=\"아이디\" prefix={<UserOutlined className=\"site-form-item-icon\"/>} autoFocus={true}/>\n                </Form.Item>\n                <Form.Item\n                name=\"password\"\n                label=\"비밀번호\"\n                >\n                    <Input placeholder=\"비밀번호\" type=\"password\" prefix={<LockOutlined className=\"site-form-item-icon\"/>} onPressEnter={onSubmitForm}/>\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}