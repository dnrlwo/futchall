{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/LoginForm.js\";\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Input, Modal, Form } from 'antd';\nimport { useInput } from '../util/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nvar LoginForm = function LoginForm(props) {\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(),\n      forceUpdate = _useState[1];\n\n  var visible = props.visible,\n      setVisible = props.setVisible;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggingIn = _useSelector.isLoggingIn,\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  var onHandleCancel = function onHandleCancel() {\n    setVisible(false);\n  };\n\n  var onSubmitForm = useCallback(function () {\n    console.log('------------------------------------');\n    console.log(form.getFieldsValue([\"id\", \"password\"]));\n    console.log('------------------------------------');\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: form.getFieldsValue([\"id\", \"password\"])\n    });\n  }, []);\n  var formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n  useEffect(function () {\n    if (isLoggedIn) {\n      setVisible(false);\n      form.resetFields([\"id\", \"password\"]);\n    }\n  }, [isLoggedIn]);\n  useEffect(function () {\n    forceUpdate({});\n  }, []);\n  return __jsx(Modal, {\n    title: \"FutChall\\uB85C\\uADF8\\uC778\",\n    visible: visible,\n    onOk: onSubmitForm,\n    onCancel: onHandleCancel,\n    centered: \"true\",\n    footer: [__jsx(Button, {\n      key: \"back\",\n      onClick: onHandleCancel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"\\uB4A4\\uB85C\\uAC00\\uAE30\"), __jsx(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      loading: isLoggingIn,\n      onClick: onSubmitForm,\n      disabled: form.getFieldValue(\"id\").length() > 0 && form.getFieldValue(\"password\").length() > 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"\\uB85C\\uADF8\\uC778\")],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    layout: \"horizontal\",\n    form: form,\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Item, {\n    name: \"id\",\n    label: \"\\uC544\\uC774\\uB514\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    placeholder: \"\\uC544\\uC774\\uB514\",\n    prefix: __jsx(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 54\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    type: \"password\",\n    prefix: __jsx(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 71\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/LoginForm.js"],"names":["React","useCallback","useEffect","useState","Button","Input","Modal","Form","useInput","useDispatch","useSelector","LOG_IN_REQUEST","UserOutlined","LockOutlined","LoginForm","props","useForm","form","forceUpdate","visible","setVisible","dispatch","state","user","isLoggingIn","isLoggedIn","onHandleCancel","onSubmitForm","console","log","getFieldsValue","type","data","formItemLayout","labelCol","span","wrapperCol","resetFields","getFieldValue","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Input, Modal, Form } from 'antd';\nimport { useInput } from '../util/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nconst LoginForm = (props) => {\n    const [form] = Form.useForm();\n    const [, forceUpdate] = useState(); \n\n    const { visible, setVisible } = props;\n    const dispatch = useDispatch();\n    const { isLoggingIn, isLoggedIn } = useSelector(state => state.user);\n\n    const onHandleCancel = (() => {\n        setVisible(false);\n    })\n    const onSubmitForm = useCallback(() => {\n        console.log('------------------------------------');\n        console.log(form.getFieldsValue([\"id\",\"password\"]));\n        console.log('------------------------------------');\n        dispatch({\n            type: LOG_IN_REQUEST,\n            data: form.getFieldsValue([\"id\",\"password\"]),\n        });\n    }, []);\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    };\n    useEffect(\n        ()=>{\n            if(isLoggedIn){\n                setVisible(false);\n                form.resetFields([\"id\", \"password\"]);\n            }\n        },[isLoggedIn]\n    )\n    useEffect(() => {\n        forceUpdate({});\n    }, []);\n    return (\n        <Modal\n            title=\"FutChall로그인\"\n            visible={visible}\n            onOk={onSubmitForm}\n            onCancel={onHandleCancel}\n            centered=\"true\"\n            footer={[\n                <Button key=\"back\" onClick={onHandleCancel}>\n                    뒤로가기\n                </Button>,\n                <Button key=\"submit\" type=\"primary\" loading={isLoggingIn} onClick={onSubmitForm} disabled={form.getFieldValue(\"id\").length() >0 && form.getFieldValue(\"password\").length() >0}>\n                    로그인\n                </Button>,\n            ]}\n        >\n            <Form\n            {...formItemLayout}\n            layout=\"horizontal\"\n            form={form}\n            onFinish={onSubmitForm}\n            >\n                <Form.Item\n                name=\"id\"\n                label=\"아이디\"\n                >\n                    <Input placeholder=\"아이디\" prefix={<UserOutlined className=\"site-form-item-icon\"/>}/>\n                </Form.Item>\n                <Form.Item\n                name=\"password\"\n                label=\"비밀번호\"\n                >\n                    <Input placeholder=\"비밀번호\" type=\"password\" prefix={<LockOutlined className=\"site-form-item-icon\"/>}/>\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}