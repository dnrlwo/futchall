{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/LoginForm.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Input, Modal, Form } from 'antd';\nimport { useInput } from '../util/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nvar LoginForm = function LoginForm(props) {\n  // const [id, onChangeId] = useInput('');\n  // const [password, onChangePassword] = useInput('');\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useState = useState(),\n      forceUpdate = _useState[1];\n\n  var visible = props.visible,\n      setVisible = props.setVisible;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggingIn = _useSelector.isLoggingIn,\n      isLoggedIn = _useSelector.isLoggedIn;\n\n  var onHandleCancel = function onHandleCancel() {\n    setVisible(false);\n  };\n\n  var onSubmitForm = useCallback(function (values) {\n    console.log('------------------------------------');\n    console.log(values);\n    console.log('------------------------------------');\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: _objectSpread({}, values)\n    });\n  }, [id, password]);\n  var formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n  useEffect(function () {\n    if (isLoggedIn) {\n      setVisible(false); //useState에 있는 id랑 password없애야 해\n    }\n  }, [isLoggedIn]);\n  useEffect(function () {\n    forceUpdate({});\n  }, []);\n  return __jsx(Modal, {\n    title: \"FutChall\\uB85C\\uADF8\\uC778\",\n    visible: visible,\n    onOk: onSubmitForm,\n    onCancel: onHandleCancel,\n    centered: \"true\",\n    footer: [__jsx(Button, {\n      key: \"back\",\n      onClick: onHandleCancel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"\\uB4A4\\uB85C\\uAC00\\uAE30\"), __jsx(Button, {\n      key: \"submit\",\n      type: \"primary\",\n      loading: isLoggingIn,\n      onClick: onSubmitForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"\\uB85C\\uADF8\\uC778\")],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Form, _extends({}, formItemLayout, {\n    layout: \"horizontal\",\n    form: form,\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Item, {\n    name: \"id\",\n    label: \"\\uC544\\uC774\\uB514\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    placeholder: \"\\uC544\\uC774\\uB514\",\n    prefix: __jsx(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 54\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    prefix: __jsx(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 55\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  })), __jsx(Form.Item, {\n    shouldUpdate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    shape: \"round\",\n    loading: isLoggingIn,\n    disabled: !form.isFieldTouched(true) || form.getFieldValue().filter(function (_ref) {\n      var value = _ref.value;\n      return value.length;\n    }).length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"))), __jsx(\"div\", {\n    style: {\n      marginBottom: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    allowClear: \"true\",\n    required: true,\n    prefix: __jsx(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 107\n      }\n    }),\n    placeholder: \"\\uC544\\uC774\\uB514\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(Input.Password, {\n    name: \"user-password\",\n    value: password,\n    onChange: onChangePassword,\n    type: \"password\",\n    onPressEnter: onSubmitForm,\n    required: true,\n    prefix: __jsx(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 160\n      }\n    }),\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/LoginForm.js"],"names":["React","useCallback","useEffect","useState","Button","Input","Modal","Form","useInput","useDispatch","useSelector","LOG_IN_REQUEST","UserOutlined","LockOutlined","LoginForm","props","useForm","form","forceUpdate","visible","setVisible","dispatch","state","user","isLoggingIn","isLoggedIn","onHandleCancel","onSubmitForm","values","console","log","type","data","id","password","formItemLayout","labelCol","span","wrapperCol","isFieldTouched","getFieldValue","filter","value","length","marginBottom","onChangeId","onChangePassword"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { Button, Input, Modal, Form } from 'antd';\nimport { useInput } from '../util/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nconst LoginForm = (props) => {\n    // const [id, onChangeId] = useInput('');\n    // const [password, onChangePassword] = useInput('');\n    const [form] = Form.useForm();\n    const [, forceUpdate] = useState(); \n\n    const { visible, setVisible } = props;\n    const dispatch = useDispatch();\n    const { isLoggingIn, isLoggedIn } = useSelector(state => state.user);\n\n    const onHandleCancel = (() => {\n        setVisible(false);\n    })\n    const onSubmitForm = useCallback((values) => {\n        console.log('------------------------------------');\n        console.log(values);\n        console.log('------------------------------------');\n        dispatch({\n            type: LOG_IN_REQUEST,\n            data: {\n                ...values\n            },\n        });\n    }, [id, password]);\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    };\n    useEffect(\n        ()=>{\n            if(isLoggedIn){\n                setVisible(false);\n                //useState에 있는 id랑 password없애야 해\n            }\n        },[isLoggedIn]\n    )\n    useEffect(() => {\n        forceUpdate({});\n    }, []);\n    return (\n        <Modal\n            title=\"FutChall로그인\"\n            visible={visible}\n            onOk={onSubmitForm}\n            onCancel={onHandleCancel}\n            centered=\"true\"\n            footer={[\n                <Button key=\"back\" onClick={onHandleCancel}>\n                    뒤로가기\n                </Button>,\n                <Button key=\"submit\" type=\"primary\" loading={isLoggingIn} onClick={onSubmitForm}>\n                    로그인\n                </Button>,\n            ]}\n        >\n            <Form\n            {...formItemLayout}\n            layout=\"horizontal\"\n            form={form}\n            onFinish={onSubmitForm}\n            >\n                <Form.Item\n                name=\"id\"\n                label=\"아이디\"\n                >\n                    <Input placeholder=\"아이디\" prefix={<UserOutlined className=\"site-form-item-icon\"/>}/>\n                </Form.Item>\n                <Form.Item\n                name=\"password\"\n                label=\"비밀번호\"\n                >\n                    <Input placeholder=\"비밀번호\" prefix={<LockOutlined className=\"site-form-item-icon\"/>}/>\n                </Form.Item>\n                <Form.Item\n                shouldUpdate>\n                    <Button \n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        shape=\"round\"\n                        loading={isLoggingIn}\n                        disabled={\n                            !form.isFieldTouched(true) || form.getFieldValue().filter(({value})=>value.length).length\n                        }\n                    >\n                        로그인\n                    </Button>\n                </Form.Item>\n            </Form>\n            <div style={{ marginBottom: '10px' }}>\n                <label htmlFor=\"user-id\">아이디</label>\n                <Input name=\"user-id\" value={id} onChange={onChangeId} allowClear=\"true\" required prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"아이디\" />\n            </div>\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label>\n                <Input.Password name=\"user-password\" value={password} onChange={onChangePassword} type=\"password\" onPressEnter={onSubmitForm} required prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"비밀번호\"/>\n            </div>\n        </Modal>\n    );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}