{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  nickname: '우기재',\n  club: '1',\n  id: 'everest88'\n};\nexport const initialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사유\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null // 내 정보\n\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          me: dummyUser\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          isLoggedIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/reducers/user.js"],"names":["dummyUser","nickname","club","id","initialState","isLoggedIn","isLoggingOut","isLoggingIn","logInErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","state","action","type","error"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,KADI;AAEdC,EAAAA,IAAI,EAAE,GAFQ;AAGdC,EAAAA,EAAE,EAAC;AAHW,CAAlB;AAMA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AACL;AACnBC,EAAAA,YAAY,EAAE,KAFU;AAEH;AACrBC,EAAAA,WAAW,EAAE,KAHW;AAGJ;AACpBC,EAAAA,gBAAgB,EAAE,EAJM;AAIF;AACtBC,EAAAA,UAAU,EAAE,KALY;AAKL;AACnBC,EAAAA,WAAW,EAAE,KANW;AAMJ;AACpBC,EAAAA,iBAAiB,EAAE,EAPK;AAOD;AACvBC,EAAAA,EAAE,EAAE,IARoB,CAQd;;AARc,CAArB;AAWP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAGP,gBAAe,CAACC,KAAK,GAAGrB,YAAT,EAAuBsB,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,cAAL;AAAqB;AACrB,+CACOS,KADP;AAEIlB,UAAAA,WAAW,EAAE,IAFjB;AAGIC,UAAAA,gBAAgB,EAAE;AAHtB;AAKC;;AACD,SAAKS,cAAL;AAAqB;AACrB,+CACOQ,KADP;AAEIlB,UAAAA,WAAW,EAAE,KAFjB;AAGIF,UAAAA,UAAU,EAAE,IAHhB;AAIIO,UAAAA,EAAE,EAAEZ;AAJR;AAMC;;AACD,SAAKkB,cAAL;AAAqB;AACrB,+CACOO,KADP;AAEIlB,UAAAA,WAAW,EAAE,KAFjB;AAGIF,UAAAA,UAAU,EAAE,KAHhB;AAIIG,UAAAA,gBAAgB,EAAEkB,MAAM,CAACE,KAJ7B;AAKIhB,UAAAA,EAAE,EAAE;AALR;AAOC;;AACD,SAAKU,eAAL;AAAsB;AACtB,+CACOG,KADP;AAEIpB,UAAAA,UAAU,EAAE,KAFhB;AAGIO,UAAAA,EAAE,EAAE;AAHR;AAKC;;AACD,SAAKC,eAAL;AAAsB;AACtB,+CACOY,KADP;AAEIf,UAAAA,WAAW,EAAE,IAFjB;AAGID,UAAAA,UAAU,EAAE,KAHhB;AAIIE,UAAAA,iBAAiB,EAAE;AAJvB;AAMC;;AACD,SAAKG,eAAL;AAAsB;AACtB,+CACOW,KADP;AAEIf,UAAAA,WAAW,EAAE,KAFjB;AAGID,UAAAA,UAAU,EAAE;AAHhB;AAKC;;AACD,SAAKM,eAAL;AAAsB;AACtB,+CACOU,KADP;AAEIf,UAAAA,WAAW,EAAE,KAFjB;AAGIC,UAAAA,iBAAiB,EAAEe,MAAM,CAACE;AAH9B;AAKC;;AACD;AAAS;AACT,iCACOH,KADP;AAGC;AA1DL;AA4DH,CA7DD","sourcesContent":["const dummyUser = {\n    nickname: '우기재',\n    club: '1',\n    id:'everest88',\n};\n\nexport const initialState = {\n    isLoggedIn: false, // 로그인 여부\n    isLoggingOut: false, // 로그아웃 시도중\n    isLoggingIn: false, // 로그인 시도중\n    logInErrorReason: '', // 로그인 실패 사유\n    isSignedUp: false, // 회원가입 성공\n    isSigningUp: false, // 회원가입 시도중\n    signUpErrorReason: '', // 회원가입 실패 사유\n    me: null, // 내 정보\n};\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; \nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; \nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; \n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case LOG_IN_REQUEST: {\n        return {\n            ...state,\n            isLoggingIn: true,\n            logInErrorReason: '',\n        };\n        }\n        case LOG_IN_SUCCESS: {\n        return {\n            ...state,\n            isLoggingIn: false,\n            isLoggedIn: true,\n            me: dummyUser,\n        };\n        }\n        case LOG_IN_FAILURE: {\n        return {\n            ...state,\n            isLoggingIn: false,\n            isLoggedIn: false,\n            logInErrorReason: action.error,\n            me: null,\n        };\n        }\n        case LOG_OUT_REQUEST: {\n        return {\n            ...state,\n            isLoggedIn: false,\n            me: null,\n        };\n        }\n        case SIGN_UP_REQUEST: {\n        return {\n            ...state,\n            isSigningUp: true,\n            isSignedUp: false,\n            signUpErrorReason: '',\n        };\n        }\n        case SIGN_UP_SUCCESS: {\n        return {\n            ...state,\n            isSigningUp: false,\n            isSignedUp: true,\n        };\n        }\n        case SIGN_UP_FAILURE: {\n        return {\n            ...state,\n            isSigningUp: false,\n            signUpErrorReason: action.error,\n        };\n        }\n        default: {\n        return {\n            ...state,\n        };\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}