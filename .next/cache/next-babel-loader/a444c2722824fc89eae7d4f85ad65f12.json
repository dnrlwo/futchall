{"ast":null,"code":"var _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { message, Button, Col, Row } from 'antd';\nimport { LoadingOutlined, SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { getLocation } from '../util/getLocation';\nimport { useSetter } from '../util/useSetter';\n\nconst Maps = () => {\n  const [lat, setLat] = useSetter('37.5795876');\n  const [lng, setLng] = useSetter('126.9636324');\n  let options;\n  let map;\n  useEffect(() => {\n    //최초 마운트 시\n    // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n    (async () => {\n      try {\n        const arr = await getLocation();\n        console.log(arr);\n\n        if (arr[0] === \"success\") {\n          setLat(arr[2]);\n          setLng(arr[3]);\n          message.success(arr[1]);\n        } else if (arr[0] === \"warn\") {\n          message.warn(arr[1], 4);\n        } else {\n          message.error(arr[1], 4);\n        }\n\n        options = {\n          center: new kakao.maps.LatLng(lat, lng),\n          level: 8\n        };\n        map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n        map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n        kakao.maps.event.addListener(map, 'dragend', function () {\n          let latlng = map.getCenter();\n          setLat(latlng.getLat());\n          setLng(latlng.getLng());\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, []);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    align: \"middle\",\n    gutter: {\n      sm: [10, 0],\n      md: [25, 0]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    icon: __jsx(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 50\n      }\n    }),\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"\\uD604\\uC7AC\\uC704\\uCE58\\uC815\\uBCF4 \\uC774\\uC6A9\\uD558\\uC5EC \\uC2DC\\uC791\\uD558\\uAE30\")), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    size: \"large\",\n    icon: __jsx(InfoCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 48\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"\\uAD6C\\uC7A5 \\uB458\\uB7EC\\uBCF4\\uAE30\"))));\n};\n\nexport default Maps;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","message","Button","Col","Row","LoadingOutlined","SearchOutlined","InfoCircleOutlined","getLocation","useSetter","Maps","lat","setLat","lng","setLng","options","map","arr","console","log","success","warn","error","center","kakao","maps","LatLng","level","Map","document","getElementById","addControl","MapTypeControl","ControlPosition","TOPRIGHT","event","addListener","latlng","getCenter","getLat","getLng","height","textAlign","sm","md"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { message, Button, Col, Row } from 'antd';\nimport { LoadingOutlined, SearchOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { getLocation } from '../util/getLocation';\nimport { useSetter } from '../util/useSetter';\nconst Maps = () => {\n    const [lat, setLat] = useSetter('37.5795876');\n    const [lng, setLng] = useSetter('126.9636324');\n    let options;\n    let map;\n    useEffect(\n        () => {\n            //최초 마운트 시\n            // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n            (async () => {\n                try {\n                    const arr = await getLocation();\n                    console.log(arr);\n                    if (arr[0] === \"success\") {\n                        setLat(arr[2]);\n                        setLng(arr[3]);\n                        message.success(arr[1]);\n                    } else if (arr[0] === \"warn\") {\n                        message.warn(arr[1], 4);\n                    } else {\n                        message.error(arr[1], 4);\n                    }\n                    options = {\n                        center: new kakao.maps.LatLng(lat, lng),\n                        level: 8\n                    };\n                    map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n                    map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n                    kakao.maps.event.addListener(map, 'dragend', function () {\n                        let latlng = map.getCenter();\n                        setLat(latlng.getLat());\n                        setLng(latlng.getLng());\n                    });\n                } catch (error) {\n                    console.log(error);\n                }\n\n            })();\n        }, []\n    );\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            {/* <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} /> */}\n            <Row align=\"middle\" gutter={{ sm: [10, 0], md: [25, 0] }}>\n                <Col>\n                    <Button type=\"primary\" icon={<SearchOutlined />} size=\"large\">현재위치정보 이용하여 시작하기</Button>\n                </Col>\n                <Col>\n                    <Button size=\"large\" icon={<InfoCircleOutlined />}>구장 둘러보기</Button>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}