{"ast":null,"code":"var _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { message, Button } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons'; // import { getLocation } from '../util/getLocation';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSetter } from '../util/useSetter';\n\nconst Maps = () => {\n  const {\n    latitude,\n    longitude\n  } = useSelector(state => state.location);\n  let options;\n  let map;\n  useEffect(() => {\n    //최초 마운트 시\n    // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n    console.log(latitude, longitude);\n    options = {\n      center: new kakao.maps.LatLng(latitude, longitude),\n      level: 8\n    };\n    map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n    map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT); // kakao.maps.event.addListener(map, 'dragend', function () {\n    //     let latlng = map.getCenter();\n    // });\n  }, []);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(LoadingOutlined, {\n    style: {\n      margin: '0 auto',\n      width: '10vh',\n      height: '10vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Maps;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","message","Button","LoadingOutlined","useSelector","useDispatch","useSetter","Maps","latitude","longitude","state","location","options","map","console","log","center","kakao","maps","LatLng","level","Map","document","getElementById","addControl","MapTypeControl","ControlPosition","TOPRIGHT","height","textAlign","margin","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,MAAhC;AACA,SAASC,eAAT,QAAgC,mBAAhC,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AACA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA3C;AACA,MAAIC,OAAJ;AACA,MAAIC,GAAJ;AACAb,EAAAA,SAAS,CACL,MAAM;AACF;AACA;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAsBC,SAAtB;AACAG,IAAAA,OAAO,GAAG;AACNI,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBX,QAAtB,EAAgCC,SAAhC,CADF;AAENW,MAAAA,KAAK,EAAE;AAFD,KAAV;AAIAP,IAAAA,GAAG,GAAG,IAAII,KAAK,CAACC,IAAN,CAAWG,GAAf,CAAmBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB,EAA4DX,OAA5D,CAAN;AACAC,IAAAA,GAAG,CAACW,UAAJ,CAAe,IAAIP,KAAK,CAACC,IAAN,CAAWO,cAAf,EAAf,EAAgDR,KAAK,CAACC,IAAN,CAAWQ,eAAX,CAA2BC,QAA3E,EATE,CAUF;AACA;AAEA;AACH,GAfI,EAeF,EAfE,CAAT;AAiBA,SACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,KAAK,EAAE,MAA3B;AAAmCH,MAAAA,MAAM,EAAE;AAA3C,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAeH,CApCD;;AAsCA,eAAerB,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { message, Button } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// import { getLocation } from '../util/getLocation';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSetter } from '../util/useSetter';\nconst Maps = () => {\n    const { latitude, longitude } = useSelector(state => state.location);\n    let options;\n    let map;\n    useEffect(\n        () => {\n            //최초 마운트 시\n            // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n            console.log(latitude, longitude);\n            options = {\n                center: new kakao.maps.LatLng(latitude, longitude),\n                level: 8\n            };\n            map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n            map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n            // kakao.maps.event.addListener(map, 'dragend', function () {\n            //     let latlng = map.getCenter();\n\n            // });\n        }, []\n    );\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} />\n            {/* <Row align=\"middle\" gutter={{ sm: 5, md: 5 }} style={{ height: '100%', height: '100%' }}>\n                <Col xs={{ span: 16, offset: 4 }}>\n                    <Button type=\"primary\" icon={<SearchOutlined />} size=\"large\" shape=\"round\">현재위치정보 이용하여 둘러보기</Button>\n                    <br />\n                    <Button size=\"large\" icon={<InfoCircleOutlined />} shape=\"round\">구장 둘러보기</Button>\n                </Col>\n                <Col xs={{ span: 16, offset: 4 }}>\n\n                </Col>\n            </Row> */}\n        </div>\n    );\n};\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}