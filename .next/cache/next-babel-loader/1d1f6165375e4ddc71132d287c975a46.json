{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyInfo = {\n  req: \"0\",\n  title: \"잔디FC\",\n  location: \"서울특별시 종로구\",\n  time: \"매주 일요일 아침8시\",\n  recruit: \"Y\",\n  description: \"20대로 이루어진 풋살팀입니다.\",\n  picture: [],\n  record: []\n};\nconst dummyRanking = [{\n  key: 1,\n  name: '잔디FC',\n  rank: 1,\n  location: '서울',\n  occupation: 3,\n  recruit: 'Y'\n}, {\n  key: 2,\n  name: 'FC벌',\n  rank: 2,\n  location: '서울',\n  occupation: 1,\n  recruit: 'N'\n}];\nexport const initialState = {\n  info: null,\n  //팀 정보\n  list: null,\n  isEnrolling: false,\n  //새 팀 등록중\n  isEnrolled: false,\n  //새 팀 등록 성공\n  enrollmentErrorReason: '',\n  //새 팀 등록 실패 사유\n  isSelected: false,\n  //팀 선택 성공\n  isSelecting: false,\n  //팀 선택중\n  selectedErrorReason: '',\n  //팀 선택 실패 사유\n  isLoading: false,\n  //팀 리스트 로딩중\n  isLoaded: false,\n  // 팀 리스트 로딩 완료\n  loadedErrorReason: '' //팀 리스트 로딩 실패 사유\n\n};\nexport const SELECT_TEAM_REQUEST = 'SELECT_TEAM_REQUSET';\nexport const SELECT_TEAM_SUCCESS = 'SELECT_TEAM_SUCCESS';\nexport const SELECT_TEAM_FAILURE = 'SELECT_TEAM_FAILURE';\nexport const ENROLL_TEAM_REQUEST = 'ENROLL_TEAM_REQUSET';\nexport const ENROLL_TEAM_SUCCESS = 'ENROLL_TEAM_SUCCESS';\nexport const ENROLL_TEAM_FAILURE = 'ENROLL_TEAM_FAILURE';\nexport const LOAD_LIST_REQUEST = 'LOAD_LIST_REQUSET';\nexport const LOAD_LIST_SUCCESS = 'LOAD_LIST_SUCCESS';\nexport const LOAD_LIST_FAILURE = 'LOAD_LIST_FAILURE';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_TEAM_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSelecting: true,\n          selectedErrorReason: ''\n        });\n      }\n\n    case SELECT_TEAM_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSelecting: false,\n          isSelected: true,\n          info: dummyInfo\n        });\n      }\n\n    case SELECT_TEAM_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSelecting: false,\n          selectedErrorReason: action.error,\n          info: null,\n          isSelected: false\n        });\n      }\n\n    case ENROLL_TEAM_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isEnrolling: true,\n          isEnrolled: false,\n          enrollmentErrorReason: ''\n        });\n      }\n\n    case ENROLL_TEAM_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isEnrolled: true,\n          isEnrolling: false\n        });\n      }\n\n    case ENROLL_TEAM_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isEnrolling: false,\n          enrollmentErrorReason: action.error\n        });\n      }\n\n    case LOAD_LIST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoading: true,\n          isLoaded: false,\n          loadedErrorReason: ''\n        });\n      }\n\n    case LOAD_LIST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoaded: true,\n          isLoading: false,\n          list: action.data\n        });\n      }\n\n    case LOAD_LIST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoading: false,\n          loadedErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/reducers/team.js"],"names":["dummyInfo","req","title","location","time","recruit","description","picture","record","dummyRanking","key","name","rank","occupation","initialState","info","list","isEnrolling","isEnrolled","enrollmentErrorReason","isSelected","isSelecting","selectedErrorReason","isLoading","isLoaded","loadedErrorReason","SELECT_TEAM_REQUEST","SELECT_TEAM_SUCCESS","SELECT_TEAM_FAILURE","ENROLL_TEAM_REQUEST","ENROLL_TEAM_SUCCESS","ENROLL_TEAM_FAILURE","LOAD_LIST_REQUEST","LOAD_LIST_SUCCESS","LOAD_LIST_FAILURE","state","action","type","error","data"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAC,GADU;AAEdC,EAAAA,KAAK,EAAC,MAFQ;AAGdC,EAAAA,QAAQ,EAAC,WAHK;AAIdC,EAAAA,IAAI,EAAC,aAJS;AAKdC,EAAAA,OAAO,EAAC,GALM;AAMdC,EAAAA,WAAW,EAAC,mBANE;AAOdC,EAAAA,OAAO,EAAC,EAPM;AAQdC,EAAAA,MAAM,EAAC;AARO,CAAlB;AAUA,MAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,GAAG,EAAE,CADT;AAEIC,EAAAA,IAAI,EAAE,MAFV;AAGIC,EAAAA,IAAI,EAAE,CAHV;AAIIT,EAAAA,QAAQ,EAAC,IAJb;AAKIU,EAAAA,UAAU,EAAC,CALf;AAMIR,EAAAA,OAAO,EAAC;AANZ,CADiB,EASjB;AACIK,EAAAA,GAAG,EAAE,CADT;AAEIC,EAAAA,IAAI,EAAE,KAFV;AAGIC,EAAAA,IAAI,EAAE,CAHV;AAIIT,EAAAA,QAAQ,EAAC,IAJb;AAKIU,EAAAA,UAAU,EAAC,CALf;AAMIR,EAAAA,OAAO,EAAC;AANZ,CATiB,CAArB;AAmBA,OAAO,MAAMS,YAAY,GAAG;AACxBC,EAAAA,IAAI,EAAC,IADmB;AACb;AACXC,EAAAA,IAAI,EAAC,IAFmB;AAGxBC,EAAAA,WAAW,EAAC,KAHY;AAGL;AACnBC,EAAAA,UAAU,EAAC,KAJa;AAIP;AACjBC,EAAAA,qBAAqB,EAAC,EALE;AAKE;AAC1BC,EAAAA,UAAU,EAAC,KANa;AAMN;AAClBC,EAAAA,WAAW,EAAC,KAPY;AAOL;AACnBC,EAAAA,mBAAmB,EAAC,EARI;AAQD;AACvBC,EAAAA,SAAS,EAAC,KATc;AASP;AACjBC,EAAAA,QAAQ,EAAC,KAVe;AAUR;AAChBC,EAAAA,iBAAiB,EAAC,EAXM,CAWF;;AAXE,CAArB;AAcP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,gBAAe,CAACC,KAAK,GAAGrB,YAAT,EAAuBsB,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,mBAAL;AAAyB;AACrB,iCACOS,KADP;AAEId,UAAAA,WAAW,EAAC,IAFhB;AAGIC,UAAAA,mBAAmB,EAAC;AAHxB;AAKH;;AACD,SAAKK,mBAAL;AAAyB;AACrB,iCACOQ,KADP;AAEId,UAAAA,WAAW,EAAC,KAFhB;AAGID,UAAAA,UAAU,EAAC,IAHf;AAIIL,UAAAA,IAAI,EAACf;AAJT;AAMH;;AACD,SAAK4B,mBAAL;AAAyB;AACrB,iCACOO,KADP;AAEId,UAAAA,WAAW,EAAC,KAFhB;AAGIC,UAAAA,mBAAmB,EAACc,MAAM,CAACE,KAH/B;AAIIvB,UAAAA,IAAI,EAAC,IAJT;AAKIK,UAAAA,UAAU,EAAC;AALf;AAOH;;AACD,SAAKS,mBAAL;AAAyB;AACrB,iCACOM,KADP;AAEIlB,UAAAA,WAAW,EAAC,IAFhB;AAGIC,UAAAA,UAAU,EAAC,KAHf;AAIIC,UAAAA,qBAAqB,EAAC;AAJ1B;AAMH;;AACD,SAAKW,mBAAL;AAAyB;AACrB,iCACOK,KADP;AAEIjB,UAAAA,UAAU,EAAC,IAFf;AAGID,UAAAA,WAAW,EAAC;AAHhB;AAKH;;AACD,SAAKc,mBAAL;AAAyB;AACrB,iCACOI,KADP;AAEIlB,UAAAA,WAAW,EAAC,KAFhB;AAGIE,UAAAA,qBAAqB,EAACiB,MAAM,CAACE;AAHjC;AAKH;;AACD,SAAKN,iBAAL;AAAuB;AACnB,iCACOG,KADP;AAEIZ,UAAAA,SAAS,EAAC,IAFd;AAGIC,UAAAA,QAAQ,EAAC,KAHb;AAIIC,UAAAA,iBAAiB,EAAC;AAJtB;AAMH;;AACD,SAAKQ,iBAAL;AAAuB;AACnB,iCACOE,KADP;AAEIX,UAAAA,QAAQ,EAAC,IAFb;AAGID,UAAAA,SAAS,EAAC,KAHd;AAIIP,UAAAA,IAAI,EAACoB,MAAM,CAACG;AAJhB;AAMH;;AACD,SAAKL,iBAAL;AAAuB;AACnB,iCACOC,KADP;AAEIZ,UAAAA,SAAS,EAAC,KAFd;AAGIE,UAAAA,iBAAiB,EAACW,MAAM,CAACE;AAH7B;AAKH;;AACD;AAAS;AACT,iCACOH,KADP;AAGC;AA1EL;AA4EH,CA7ED","sourcesContent":["const dummyInfo = {\n    req:\"0\",\n    title:\"잔디FC\",\n    location:\"서울특별시 종로구\",\n    time:\"매주 일요일 아침8시\",\n    recruit:\"Y\",\n    description:\"20대로 이루어진 풋살팀입니다.\",\n    picture:[],\n    record:[],\n}\nconst dummyRanking = [\n    {\n        key: 1,\n        name: '잔디FC',\n        rank: 1,\n        location:'서울',\n        occupation:3,\n        recruit:'Y',\n    },\n    {\n        key: 2,\n        name: 'FC벌',\n        rank: 2,\n        location:'서울',\n        occupation:1,\n        recruit:'N',\n    },\n]\n\nexport const initialState = {\n    info:null, //팀 정보\n    list:null,\n    isEnrolling:false, //새 팀 등록중\n    isEnrolled:false,//새 팀 등록 성공\n    enrollmentErrorReason:'', //새 팀 등록 실패 사유\n    isSelected:false, //팀 선택 성공\n    isSelecting:false, //팀 선택중\n    selectedErrorReason:'',//팀 선택 실패 사유\n    isLoading:false, //팀 리스트 로딩중\n    isLoaded:false, // 팀 리스트 로딩 완료\n    loadedErrorReason:'', //팀 리스트 로딩 실패 사유\n}\n\nexport const SELECT_TEAM_REQUEST = 'SELECT_TEAM_REQUSET';\nexport const SELECT_TEAM_SUCCESS = 'SELECT_TEAM_SUCCESS';\nexport const SELECT_TEAM_FAILURE = 'SELECT_TEAM_FAILURE';\n\nexport const ENROLL_TEAM_REQUEST = 'ENROLL_TEAM_REQUSET';\nexport const ENROLL_TEAM_SUCCESS = 'ENROLL_TEAM_SUCCESS';\nexport const ENROLL_TEAM_FAILURE = 'ENROLL_TEAM_FAILURE';\n\nexport const LOAD_LIST_REQUEST = 'LOAD_LIST_REQUSET';\nexport const LOAD_LIST_SUCCESS = 'LOAD_LIST_SUCCESS';\nexport const LOAD_LIST_FAILURE = 'LOAD_LIST_FAILURE';\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SELECT_TEAM_REQUEST:{\n            return{\n                ...state,\n                isSelecting:true,\n                selectedErrorReason:'',\n            }\n        }\n        case SELECT_TEAM_SUCCESS:{\n            return{\n                ...state,\n                isSelecting:false,\n                isSelected:true,\n                info:dummyInfo,\n            }\n        }\n        case SELECT_TEAM_FAILURE:{\n            return{\n                ...state,\n                isSelecting:false,\n                selectedErrorReason:action.error,\n                info:null,\n                isSelected:false,\n            }\n        }\n        case ENROLL_TEAM_REQUEST:{\n            return{\n                ...state,\n                isEnrolling:true,\n                isEnrolled:false,\n                enrollmentErrorReason:'',\n            }\n        }\n        case ENROLL_TEAM_SUCCESS:{\n            return{\n                ...state,\n                isEnrolled:true,\n                isEnrolling:false,\n            }\n        }\n        case ENROLL_TEAM_FAILURE:{\n            return{\n                ...state,\n                isEnrolling:false,\n                enrollmentErrorReason:action.error,\n            }\n        }\n        case LOAD_LIST_REQUEST:{\n            return{\n                ...state,\n                isLoading:true,\n                isLoaded:false,\n                loadedErrorReason:'',\n            }\n        }\n        case LOAD_LIST_SUCCESS:{\n            return{\n                ...state,\n                isLoaded:true,\n                isLoading:false,\n                list:action.data,\n            }\n        }\n        case LOAD_LIST_FAILURE:{\n            return{\n                ...state,\n                isLoading:false,\n                loadedErrorReason:action.error,\n            }\n        }\n        default: {\n        return {\n            ...state,\n        };\n        }\n}\n};\n"]},"metadata":{},"sourceType":"module"}