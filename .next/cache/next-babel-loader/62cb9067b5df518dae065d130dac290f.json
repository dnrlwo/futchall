{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport { useSelector } from 'react-redux';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nvar Maps = function Maps(props) {\n  var _useSelector = useSelector(function (state) {\n    return state.location;\n  }),\n      latitude = _useSelector.latitude,\n      longitude = _useSelector.longitude;\n\n  var options;\n  var map;\n  useEffect(function () {\n    //최초 마운트 시\n    // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n    console.log(props.router);\n    var arr = props.router.query.arr;\n    options = {\n      center: new kakao.maps.LatLng(latitude, longitude),\n      level: 8\n    };\n    map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n    map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT); // kakao.maps.event.addListener(map, 'dragend', function () {\n    //     let latlng = map.getCenter();\n\n    if (arr[0] === \"success\") {\n      message.success(arr[1]);\n    } else if (arr[0] === \"warn\") {\n      notification.open({\n        message: \"현재위치로 탐색하시려면?\",\n        description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\",\n        duration: 0\n      });\n      message.warn(arr[1], 4);\n    } else {\n      message.error(arr[1], 4);\n    } // });\n\n  }, []);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(LoadingOutlined, {\n    style: {\n      margin: '0 auto',\n      width: '10vh',\n      height: '10vh'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default withRouter(Maps);","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","withRouter","useSelector","LoadingOutlined","Maps","props","state","location","latitude","longitude","options","map","console","log","router","arr","query","center","kakao","maps","LatLng","level","Map","document","getElementById","addControl","MapTypeControl","ControlPosition","TOPRIGHT","message","success","notification","open","description","duration","warn","error","height","textAlign","margin","width"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,WAAT,QAA6B,aAA7B;AACA,SAASC,eAAT,QAAgC,mBAAhC;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,qBACYH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAV;AAAA,GAAN,CADvB;AAAA,MACZC,QADY,gBACZA,QADY;AAAA,MACFC,SADE,gBACFA,SADE;;AAEpB,MAAIC,OAAJ;AACA,MAAIC,GAAJ;AACAX,EAAAA,SAAS,CACL,YAAM;AACF;AACA;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,MAAlB;AACA,QAAMC,GAAG,GAAGV,KAAK,CAACS,MAAN,CAAaE,KAAb,CAAmBD,GAA/B;AACAL,IAAAA,OAAO,GAAG;AACNO,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBZ,QAAtB,EAAgCC,SAAhC,CADF;AAENY,MAAAA,KAAK,EAAE;AAFD,KAAV;AAIAV,IAAAA,GAAG,GAAG,IAAIO,KAAK,CAACC,IAAN,CAAWG,GAAf,CAAmBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB,EAA4Dd,OAA5D,CAAN;AACAC,IAAAA,GAAG,CAACc,UAAJ,CAAe,IAAIP,KAAK,CAACC,IAAN,CAAWO,cAAf,EAAf,EAAgDR,KAAK,CAACC,IAAN,CAAWQ,eAAX,CAA2BC,QAA3E,EAVE,CAWF;AACA;;AACA,QAAIb,GAAG,CAAC,CAAD,CAAH,KAAW,SAAf,EAA0B;AACtBc,MAAAA,OAAO,CAACC,OAAR,CAAgBf,GAAG,CAAC,CAAD,CAAnB;AACH,KAFD,MAEO,IAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,MAAf,EAAuB;AAC1BgB,MAAAA,YAAY,CAACC,IAAb,CAAkB;AAAEH,QAAAA,OAAO,EAAE,eAAX;AAA4BI,QAAAA,WAAW,EAAE,2FAAzC;AAAsIC,QAAAA,QAAQ,EAAE;AAAhJ,OAAlB;AACAL,MAAAA,OAAO,CAACM,IAAR,CAAapB,GAAG,CAAC,CAAD,CAAhB,EAAqB,CAArB;AACH,KAHM,MAGA;AACHc,MAAAA,OAAO,CAACO,KAAR,CAAcrB,GAAG,CAAC,CAAD,CAAjB,EAAsB,CAAtB;AACH,KApBC,CAqBF;;AACH,GAvBI,EAuBF,EAvBE,CAAT;AAyBA,SACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAuB,IAAA,KAAK,EAAE;AAAEsB,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,KAAK,EAAE,MAA3B;AAAmCH,MAAAA,MAAM,EAAE;AAA3C,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAlCD;;AAoCA,eAAepC,UAAU,CAACG,IAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport { useSelector, } from 'react-redux';\nimport { LoadingOutlined } from '@ant-design/icons';\nconst Maps = (props) => {\n    const { latitude, longitude } = useSelector(state => state.location);\n    let options;\n    let map;\n    useEffect(\n        () => {\n            //최초 마운트 시\n            // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n            console.log(props.router);\n            const arr = props.router.query.arr;\n            options = {\n                center: new kakao.maps.LatLng(latitude, longitude),\n                level: 8\n            };\n            map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n            map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n            // kakao.maps.event.addListener(map, 'dragend', function () {\n            //     let latlng = map.getCenter();\n            if (arr[0] === \"success\") {\n                message.success(arr[1]);\n            } else if (arr[0] === \"warn\") {\n                notification.open({ message: \"현재위치로 탐색하시려면?\", description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\", duration: 0 })\n                message.warn(arr[1], 4);\n            } else {\n                message.error(arr[1], 4);\n            }\n            // });\n        }, []\n    );\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} />\n        </div>\n    );\n};\n\nexport default withRouter(Maps);"]},"metadata":{},"sourceType":"module"}