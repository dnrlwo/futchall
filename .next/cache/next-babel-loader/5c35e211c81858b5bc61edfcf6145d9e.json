{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { getLocation } from '../util/getLocation';\nimport { useSetter } from '../util/useSetter';\n\nvar Maps = function Maps() {\n  var _useSetter = useSetter('37.5795876'),\n      _useSetter2 = _slicedToArray(_useSetter, 2),\n      lat = _useSetter2[0],\n      setLat = _useSetter2[1];\n\n  var _useSetter3 = useSetter('126.9636324'),\n      _useSetter4 = _slicedToArray(_useSetter3, 2),\n      lng = _useSetter4[0],\n      setLng = _useSetter4[1];\n\n  var options;\n  var map;\n  useEffect(function () {\n    //최초 마운트 시\n    // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n    (function _callee() {\n      var arr;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getLocation());\n\n            case 2:\n              arr = _context.sent;\n              console.log(arr);\n\n              if (arr[0] === \"success\") {\n                setLat(arr[2]);\n                setLng(arr[3]);\n                message.success(arr[1]);\n              } else if (arr[0] === \"warn\") {\n                message.warn(arr[1], 4);\n              } else {\n                message.error(arr[1], 4);\n              }\n\n              options = {\n                center: new kakao.maps.LatLng(lat, lng),\n                level: 5\n              };\n              map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n              map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n              kakao.maps.event.addListener(map, 'dragend', function () {\n                var latlng = map.getCenter();\n                setLat(latlng.getLat());\n                setLng(latlng.getLng());\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(LoadingOutlined, {\n    style: {\n      margin: '0 auto',\n      width: '10vh',\n      height: '10vh'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Maps;","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","message","LoadingOutlined","getLocation","useSetter","Maps","lat","setLat","lng","setLng","options","map","arr","console","log","success","warn","error","center","kakao","maps","LatLng","level","Map","document","getElementById","addControl","MapTypeControl","ControlPosition","TOPRIGHT","event","addListener","latlng","getCenter","getLat","getLng","height","textAlign","margin","width"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,mBACOD,SAAS,CAAC,YAAD,CADhB;AAAA;AAAA,MACRE,GADQ;AAAA,MACHC,MADG;;AAAA,oBAEOH,SAAS,CAAC,aAAD,CAFhB;AAAA;AAAA,MAERI,GAFQ;AAAA,MAEHC,MAFG;;AAGf,MAAIC,OAAJ;AACA,MAAIC,GAAJ;AACAX,EAAAA,SAAS,CACL,YAAM;AACF;AACA;AACA,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqBG,WAAW,EADhC;;AAAA;AACSS,cAAAA,GADT;AAEGC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,kBAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,SAAf,EAA0B;AACtBL,gBAAAA,MAAM,CAACK,GAAG,CAAC,CAAD,CAAJ,CAAN;AACAH,gBAAAA,MAAM,CAACG,GAAG,CAAC,CAAD,CAAJ,CAAN;AACAX,gBAAAA,OAAO,CAACc,OAAR,CAAgBH,GAAG,CAAC,CAAD,CAAnB;AACH,eAJD,MAIO,IAAIA,GAAG,CAAC,CAAD,CAAH,KAAW,MAAf,EAAuB;AAC1BX,gBAAAA,OAAO,CAACe,IAAR,CAAaJ,GAAG,CAAC,CAAD,CAAhB,EAAqB,CAArB;AACH,eAFM,MAEA;AACHX,gBAAAA,OAAO,CAACgB,KAAR,CAAcL,GAAG,CAAC,CAAD,CAAjB,EAAsB,CAAtB;AACH;;AACDF,cAAAA,OAAO,GAAG;AACNQ,gBAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBf,GAAtB,EAA2BE,GAA3B,CADF;AAENc,gBAAAA,KAAK,EAAE;AAFD,eAAV;AAIAX,cAAAA,GAAG,GAAG,IAAIQ,KAAK,CAACC,IAAN,CAAWG,GAAf,CAAmBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB,EAA4Df,OAA5D,CAAN;AACAC,cAAAA,GAAG,CAACe,UAAJ,CAAe,IAAIP,KAAK,CAACC,IAAN,CAAWO,cAAf,EAAf,EAAgDR,KAAK,CAACC,IAAN,CAAWQ,eAAX,CAA2BC,QAA3E;AACAV,cAAAA,KAAK,CAACC,IAAN,CAAWU,KAAX,CAAiBC,WAAjB,CAA6BpB,GAA7B,EAAkC,SAAlC,EAA6C,YAAY;AACrD,oBAAIqB,MAAM,GAAGrB,GAAG,CAACsB,SAAJ,EAAb;AACA1B,gBAAAA,MAAM,CAACyB,MAAM,CAACE,MAAP,EAAD,CAAN;AACAzB,gBAAAA,MAAM,CAACuB,MAAM,CAACG,MAAP,EAAD,CAAN;AACH,eAJD;;AAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAwBH,GA5BI,EA4BF,EA5BE,CAAT;AA8BA,SACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,KAAK,EAAE,MAA3B;AAAmCH,MAAAA,MAAM,EAAE;AAA3C,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAxCD;;AA0CA,eAAe/B,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { getLocation } from '../util/getLocation';\nimport { useSetter } from '../util/useSetter';\nconst Maps = () => {\n    const [lat, setLat] = useSetter('37.5795876');\n    const [lng, setLng] = useSetter('126.9636324');\n    let options;\n    let map;\n    useEffect(\n        () => {\n            //최초 마운트 시\n            // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n            (async () => {\n                const arr = await getLocation();\n                console.log(arr);\n                if (arr[0] === \"success\") {\n                    setLat(arr[2]);\n                    setLng(arr[3]);\n                    message.success(arr[1]);\n                } else if (arr[0] === \"warn\") {\n                    message.warn(arr[1], 4);\n                } else {\n                    message.error(arr[1], 4);\n                }\n                options = {\n                    center: new kakao.maps.LatLng(lat, lng),\n                    level: 5\n                };\n                map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n                map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n                kakao.maps.event.addListener(map, 'dragend', function () {\n                    let latlng = map.getCenter();\n                    setLat(latlng.getLat());\n                    setLng(latlng.getLng());\n                });\n            })();\n        }, []\n    );\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} />\n        </div>\n    );\n};\n\nexport default Maps;"]},"metadata":{},"sourceType":"module"}