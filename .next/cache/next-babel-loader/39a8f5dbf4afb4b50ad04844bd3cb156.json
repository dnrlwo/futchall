{"ast":null,"code":"import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { REFRESH_STADIUMLIST_REQUEST, REFRESH_STADIUMLIST_SUCCESS, REFRESH_STADIUMLIST_FAILURE } from '../reducers/location';\n\nfunction refreshStadiumListAPI() {}\n\nfunction* refreshStadiumList() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: REFRESH_STADIUMLIST_SUCCESS,\n      //   tempdata\n      data: [{\n        req: 1,\n        //시퀀스\n        title: \"누상동 다목적 운동장\",\n        //명칭\n        tag: [\"인도어풋살장\", \"무료\"],\n        lat: \"37.5795876\",\n        lng: \"126.9636324\"\n      }, {\n        req: 2,\n        //시퀀스\n        title: \"서대문 돌산구장\",\n        //명칭\n        tag: [\"인조잔디축구장\", \"무료\"],\n        lat: \"37.602835\",\n        lng: \"126.945915\"\n      }, {\n        req: 3,\n        //시퀀스\n        title: \"서울 농학교 풋살장\",\n        //명칭\n        tag: [\"인도어풋살장\", \"무료\"],\n        lat: \"37.584397\",\n        lng: \"126.968567\"\n      }]\n    });\n  } catch (e) {\n    yield put({\n      type: REFRESH_STADIUMLIST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchRefreshStadiumList() {\n  yield takeLatest(REFRESH_STADIUMLIST_REQUEST, refreshStadiumList);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchRefreshStadiumList)]);\n}","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/sagas/location.js"],"names":["all","fork","takeLatest","put","delay","call","axios","REFRESH_STADIUMLIST_REQUEST","REFRESH_STADIUMLIST_SUCCESS","REFRESH_STADIUMLIST_FAILURE","refreshStadiumListAPI","refreshStadiumList","type","data","req","title","tag","lat","lng","e","error","watchRefreshStadiumList","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,2BADJ,EAEIC,2BAFJ,EAGIC,2BAHJ,QAIO,sBAJP;;AAMA,SAASC,qBAAT,GAAiC,CAEhC;;AAED,UAAUC,kBAAV,GAA+B;AAC7B,MAAI;AACF,UAAMP,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEJ,2BADE;AAEV;AACEK,MAAAA,IAAI,EAAE,CACJ;AACIC,QAAAA,GAAG,EAAE,CADT;AACY;AACRC,QAAAA,KAAK,EAAE,aAFX;AAE0B;AACtBC,QAAAA,GAAG,EAAE,CAAC,QAAD,EAAW,IAAX,CAHT;AAIIC,QAAAA,GAAG,EAAE,YAJT;AAKIC,QAAAA,GAAG,EAAE;AALT,OADI,EAQJ;AACIJ,QAAAA,GAAG,EAAE,CADT;AACY;AACRC,QAAAA,KAAK,EAAE,UAFX;AAEuB;AACnBC,QAAAA,GAAG,EAAE,CAAC,SAAD,EAAY,IAAZ,CAHT;AAIIC,QAAAA,GAAG,EAAE,WAJT;AAKIC,QAAAA,GAAG,EAAE;AALT,OARI,EAeJ;AACIJ,QAAAA,GAAG,EAAE,CADT;AACY;AACRC,QAAAA,KAAK,EAAE,YAFX;AAEyB;AACrBC,QAAAA,GAAG,EAAE,CAAC,QAAD,EAAW,IAAX,CAHT;AAIIC,QAAAA,GAAG,EAAE,WAJT;AAKIC,QAAAA,GAAG,EAAE;AALT,OAfI;AAHE,KAAD,CAAT;AA2BD,GA7BD,CA6BE,OAAOC,CAAP,EAAU;AACV,UAAMhB,GAAG,CAAC;AACRS,MAAAA,IAAI,EAAEH,2BADE;AAERW,MAAAA,KAAK,EAAED;AAFC,KAAD,CAAT;AAID;AACF;;AAED,UAAUE,uBAAV,GAAoC;AAClC,QAAMnB,UAAU,CAACK,2BAAD,EAA8BI,kBAA9B,CAAhB;AACD;;AAED,eAAe,UAAUW,QAAV,GAAqB;AAClC,QAAMtB,GAAG,CAAC,CACRC,IAAI,CAACoB,uBAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    REFRESH_STADIUMLIST_REQUEST,\n    REFRESH_STADIUMLIST_SUCCESS,\n    REFRESH_STADIUMLIST_FAILURE,\n} from '../reducers/location';\n\nfunction refreshStadiumListAPI() {\n\n}\n\nfunction* refreshStadiumList() {\n  try {\n    yield delay(1000);\n    yield put({\n      type: REFRESH_STADIUMLIST_SUCCESS,\n    //   tempdata\n      data: [\n        {\n            req: 1, //시퀀스\n            title: \"누상동 다목적 운동장\", //명칭\n            tag: [\"인도어풋살장\", \"무료\"],\n            lat: \"37.5795876\",\n            lng: \"126.9636324\",\n        },\n        {\n            req: 2, //시퀀스\n            title: \"서대문 돌산구장\", //명칭\n            tag: [\"인조잔디축구장\", \"무료\"],\n            lat: \"37.602835\",\n            lng: \"126.945915\",\n        },\n        {\n            req: 3, //시퀀스\n            title: \"서울 농학교 풋살장\", //명칭\n            tag: [\"인도어풋살장\", \"무료\"],\n            lat: \"37.584397\",\n            lng: \"126.968567\",\n        },\n    ]\n    });\n  } catch (e) {\n    yield put({\n      type: REFRESH_STADIUMLIST_FAILURE,\n      error: e,\n    });\n  }\n}\n\nfunction* watchRefreshStadiumList() {\n  yield takeLatest(REFRESH_STADIUMLIST_REQUEST, refreshStadiumList);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchRefreshStadiumList),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}