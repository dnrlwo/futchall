{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kcho/Desktop/react-futchall/front/components/Maps.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeLocationAction } from '../reducers/location';\nimport { makeMarker } from '../util/makeMarker';\nimport { notification, message, Card } from 'antd';\nimport { LoadingOutlined, CloseOutlined } from '@ant-design/icons';\n\nvar Maps = function Maps(props) {\n  var _useSelector = useSelector(function (state) {\n    return state.location;\n  }),\n      latitude = _useSelector.latitude,\n      longitude = _useSelector.longitude,\n      stadiumList = _useSelector.stadiumList;\n\n  var dispatch = useDispatch();\n  var options;\n  var map;\n  useEffect(function () {\n    //최초 마운트 시\n    // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n    options = {\n      center: new kakao.maps.LatLng(latitude, longitude),\n      level: 8\n    };\n    map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n    map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n    stadiumList.map(function (c) {\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(c.lat, c.lng)\n      });\n\n      var content = __jsx(Card, {\n        style: {\n          width: '280px'\n        },\n        actions: [__jsx(CloseOutlined, {\n          key: \"close\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 74\n          }\n        })],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 31\n        }\n      }, __jsx(Card.Meta, {\n        title: c.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 106\n        }\n      }));\n\n      var overlay = new kakao.maps.CustomOverlay({\n        content: content,\n        map: null,\n        position: marker.getPosition()\n      });\n\n      (function (marker, overlay) {\n        kakao.maps.event.addListener(marker, 'click', function () {\n          overlay.setMap(map);\n        });\n\n        function closeOverlay() {\n          overlay.setMap(null);\n        }\n      })(marker, overlay);\n    });\n    kakao.maps.event.addListener(map, 'dragend', function () {\n      var latlng = map.getCenter();\n      dispatch(changeLocationAction({\n        latitude: latlng.getLat(),\n        longitude: latlng.getLng()\n      }));\n    });\n\n    if (props.router.query.arr) {\n      var arr = props.router.query.arr.split(\",\");\n\n      if (arr[0] === \"success\") {\n        message.success(arr[1]);\n      } else if (arr[0] === \"warn\") {\n        notification.destroy();\n        notification.open({\n          message: \"현재위치로 탐색하시려면?\",\n          description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\",\n          duration: 0\n        });\n      } else {\n        message.error(arr[1], 4);\n      }\n    }\n  }, []);\n  return __jsx(\"div\", {\n    id: \"mapContainer\",\n    style: {\n      height: '70vh',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(LoadingOutlined, {\n    style: {\n      margin: '0 auto',\n      width: '10vh',\n      height: '10vh'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default withRouter(Maps);","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/components/Maps.js"],"names":["React","useEffect","withRouter","useSelector","useDispatch","changeLocationAction","makeMarker","notification","message","Card","LoadingOutlined","CloseOutlined","Maps","props","state","location","latitude","longitude","stadiumList","dispatch","options","map","center","kakao","maps","LatLng","level","Map","document","getElementById","addControl","MapTypeControl","ControlPosition","TOPRIGHT","c","marker","Marker","position","lat","lng","content","width","title","overlay","CustomOverlay","getPosition","event","addListener","setMap","closeOverlay","latlng","getCenter","getLat","getLng","router","query","arr","split","success","destroy","open","description","duration","error","height","textAlign","margin"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeLocationAction } from '../reducers/location';\nimport { makeMarker } from '../util/makeMarker';\nimport { notification, message, Card } from 'antd';\nimport { LoadingOutlined, CloseOutlined } from '@ant-design/icons';\nconst Maps = (props) => {\n    const { latitude, longitude, stadiumList } = useSelector(state => state.location);\n    const dispatch = useDispatch();\n    let options;\n    let map;\n    useEffect(\n        () => {\n            //최초 마운트 시\n            // 지도 위치에 따른 데이터 가져와야 해 redux-saga\n            options = {\n                center: new kakao.maps.LatLng(latitude, longitude),\n                level: 8\n            };\n            map = new kakao.maps.Map(document.getElementById(\"mapContainer\"), options);\n            map.addControl(new kakao.maps.MapTypeControl(), kakao.maps.ControlPosition.TOPRIGHT);\n\n            stadiumList.map((c) => {\n                const marker = new kakao.maps.Marker(\n                    {\n                        map: map,\n                        position: new kakao.maps.LatLng(c.lat, c.lng)\n                    }\n                )\n                let content = <Card style={{ width: '280px' }} actions={[<CloseOutlined key=\"close\" />]}><Card.Meta title={c.title} /></Card>;\n                let overlay = new kakao.maps.CustomOverlay({\n                    content: content,\n                    map: null,\n                    position: marker.getPosition()\n                });\n                (function (marker, overlay) {\n                    kakao.maps.event.addListener(marker, 'click', function () {\n                        overlay.setMap(map);\n                    });\n                    function closeOverlay() {\n                        overlay.setMap(null);\n                    }\n                })(marker, overlay);\n            })\n            kakao.maps.event.addListener(map, 'dragend', function () {\n                let latlng = map.getCenter();\n                dispatch(changeLocationAction({ latitude: latlng.getLat(), longitude: latlng.getLng(), }));\n            });\n            if (props.router.query.arr) {\n                const arr = props.router.query.arr.split(\",\");\n                if (arr[0] === \"success\") {\n                    message.success(arr[1]);\n                } else if (arr[0] === \"warn\") {\n                    notification.destroy();\n                    notification.open({ message: \"현재위치로 탐색하시려면?\", description: \"이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)\", duration: 0 })\n                } else {\n                    message.error(arr[1], 4);\n                }\n            }\n        }, []\n    );\n    return (\n        <div id=\"mapContainer\" style={{ height: '70vh', textAlign: 'center' }}>\n            <LoadingOutlined style={{ margin: '0 auto', width: '10vh', height: '10vh' }} />\n        </div>\n    );\n};\n\nexport default withRouter(Maps);"]},"metadata":{},"sourceType":"module"}