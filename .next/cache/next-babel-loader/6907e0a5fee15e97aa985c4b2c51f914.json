{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n// export function getLocation() {\n//     if (navigator.geolocation) {\n//         navigator.geolocation.getCurrentPosition(function (pos) {\n//             return ([\"success\", \"현재 접속위치를 중심으로 지도를 활성화하였습니다.\", pos.coords.latitude, pos.coords.longitude]);\n//         }, function () {\n//             // console.log(\"2\");\n//             return ([\"warn\", \"위치정보제공을 동의하시고 현재위치 주변 구장을 확인하세요.\"]);\n//         });\n//     } else {\n//         // console.log(\"3\");\n//         return ([\"error\", \"현재 브라우저에서는 현재위치 사용이 불가능합니다.\"]);\n//     }\n// }\nexport function getLocation() {\n  var locc;\n  return _regeneratorRuntime.async(function getLocation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          locc = function _locc() {\n            return new Promise(function (resolve, reject) {\n              if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function (pos) {\n                  resolve([\"success\", \"현재 접속위치를 중심으로 지도를 활성화하였습니다.\", pos.coords.latitude, pos.coords.longitude]);\n                }, function () {\n                  resolve([\"warn\", \"위치정보제공을 동의하시고 현재위치 주변 구장을 확인하세요.\"]);\n                }, {\n                  timeout: 2000\n                });\n              } else {\n                resolve([\"error\", \"현재 브라우저에서는 현재위치 사용이 불가능합니다.\"]);\n              }\n            });\n          };\n\n          ;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(locc());\n\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n} // if (navigator.geolocation) {\n//     navigator.geolocation.getCurrentPosition(function (pos) {\n//         lat = pos.coords.latitude;     // 위도\n//         lng = pos.coords.longitude; // 경도\n//         options = {\n//             center: new kakao.maps.LatLng(lat, lng),\n//             level: 5\n//         };\n//         map = new kakao.maps.Map(container, options);\n//         message.success(\"현재 접속위치를 중심으로 지도를 활성화하였습니다.\");\n//         // const mapTypeControl = new kakao.maps.MapTypeControl();\n//         // map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\n//     }, function () {\n//         options = {\n//             center: new kakao.maps.LatLng(lat, lng),\n//             level: 5\n//         };\n//         map = new kakao.maps.Map(container, options);\n//         message.warn(\"위치정보제공을 동의하시고 현재위치 주변 구장을 확인하세요.\");\n//     });\n// } else {\n//     options = {\n//         center: new kakao.maps.LatLng(lat, lng),\n//         level: 5\n//     };\n//     map = new kakao.maps.Map(container, options);\n//     message.error(\"현재 브라우저에서는 현재위치 사용이 불가능합니다.\");\n// }","map":{"version":3,"sources":["/Users/kcho/Desktop/react-futchall/front/util/getLocation.js"],"names":["getLocation","locc","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","timeout"],"mappings":";AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAeA,WAAf;AAAA,MACMC,IADN;AAAA;AAAA;AAAA;AAAA;AACMA,UAAAA,IADN,oBACa;AACZ,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kBAAIC,SAAS,CAACC,WAAd,EAA2B;AACvBD,gBAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAUC,GAAV,EAAe;AACpDL,kBAAAA,OAAO,CAAC,CAAC,SAAD,EAAY,6BAAZ,EAA2CK,GAAG,CAACC,MAAJ,CAAWC,QAAtD,EAAgEF,GAAG,CAACC,MAAJ,CAAWE,SAA3E,CAAD,CAAP;AACH,iBAFD,EAEG,YAAY;AACXR,kBAAAA,OAAO,CAAC,CAAC,MAAD,EAAS,kCAAT,CAAD,CAAP;AACH,iBAJD,EAIG;AAAES,kBAAAA,OAAO,EAAE;AAAX,iBAJH;AAKH,eAND,MAMO;AACHT,gBAAAA,OAAO,CAAC,CAAC,OAAD,EAAU,6BAAV,CAAD,CAAP;AACH;AACJ,aAVM,CAAP;AAWH,WAbE;;AAaF;AAbE;AAAA,2CAcUF,IAAI,EAdd;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAiBK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// export function getLocation() {\n\n//     if (navigator.geolocation) {\n//         navigator.geolocation.getCurrentPosition(function (pos) {\n//             return ([\"success\", \"현재 접속위치를 중심으로 지도를 활성화하였습니다.\", pos.coords.latitude, pos.coords.longitude]);\n//         }, function () {\n//             // console.log(\"2\");\n//             return ([\"warn\", \"위치정보제공을 동의하시고 현재위치 주변 구장을 확인하세요.\"]);\n//         });\n//     } else {\n//         // console.log(\"3\");\n//         return ([\"error\", \"현재 브라우저에서는 현재위치 사용이 불가능합니다.\"]);\n//     }\n// }\nexport async function getLocation() {\n    function locc() {\n        return new Promise((resolve, reject) => {\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(function (pos) {\n                    resolve([\"success\", \"현재 접속위치를 중심으로 지도를 활성화하였습니다.\", pos.coords.latitude, pos.coords.longitude]);\n                }, function () {\n                    resolve([\"warn\", \"위치정보제공을 동의하시고 현재위치 주변 구장을 확인하세요.\"]);\n                }, { timeout: 2000 });\n            } else {\n                resolve([\"error\", \"현재 브라우저에서는 현재위치 사용이 불가능합니다.\"]);\n            }\n        });\n    };\n    return await locc();\n}\n\n            // if (navigator.geolocation) {\n            //     navigator.geolocation.getCurrentPosition(function (pos) {\n            //         lat = pos.coords.latitude;     // 위도\n            //         lng = pos.coords.longitude; // 경도\n            //         options = {\n            //             center: new kakao.maps.LatLng(lat, lng),\n            //             level: 5\n            //         };\n            //         map = new kakao.maps.Map(container, options);\n            //         message.success(\"현재 접속위치를 중심으로 지도를 활성화하였습니다.\");\n            //         // const mapTypeControl = new kakao.maps.MapTypeControl();\n            //         // map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);\n            //     }, function () {\n            //         options = {\n            //             center: new kakao.maps.LatLng(lat, lng),\n            //             level: 5\n            //         };\n            //         map = new kakao.maps.Map(container, options);\n            //         message.warn(\"위치정보제공을 동의하시고 현재위치 주변 구장을 확인하세요.\");\n            //     });\n            // } else {\n            //     options = {\n            //         center: new kakao.maps.LatLng(lat, lng),\n            //         level: 5\n            //     };\n            //     map = new kakao.maps.Map(container, options);\n            //     message.error(\"현재 브라우저에서는 현재위치 사용이 불가능합니다.\");\n            // }\n"]},"metadata":{},"sourceType":"module"}