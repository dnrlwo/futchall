{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/index.js","webpack:///./reducers/location.js","webpack:///./util/getLocation.js","webpack:///external \"@ant-design/icons\"","webpack:///external \"antd\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-redux\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from 'react';\nimport Router from 'next/router';\nimport { Button, Col, Row, Input, Statistic, Divider, notification } from 'antd';\nimport { SearchOutlined, InfoCircleOutlined, LikeOutlined, ArrowUpOutlined, TrophyTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { REFRESH_STADIUMLIST_REQUEST } from '../reducers/location';\nimport { getLocation } from '../util/getLocation';\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const onSearch = (e) => {\n        console.log(e);\n    }\n    const {isChangingLocation} = useSelector(state=>state.location);\n    const onClickGPS = () => {\n        (async () => {\n            try {\n                const arr = await getLocation();\n                if (arr[0] === \"success\") {\n                    dispatch({\n                        type:REFRESH_STADIUMLIST_REQUEST, \n                        data:{latitude: arr[2], longitude: arr[3],} \n                    });\n                }\n                //클라이언트사이드 렌더링\n                Router.push(`/stadia?arr=${arr}`, '/stadia');\n            } catch (error) {\n                console.log(error);\n            }\n        })();\n    }\n    const onClickNoGPS = () => {\n        notification.open({ message: \"현재위치로 탐색하시려면?\", description: `이전에 위치정보 제공을 동의하시지 않은 경우, 주소창 앞 자물쇠 버튼을 클릭하여 수정하여 주세요. 그렇지 않은 경우 메인페이지에서 파란색 \"현재위치정보 이용하여 둘러보기\"를 클릭하여 주세요.(Internet Explorer에서는 사용하실 수 없습니다.)`, duration: 0 })\n        Router.push('/stadia');\n    }\n    return (\n        <div style={{ height: '80vh' }}>\n            <Row align=\"middle\" style={{ height: '100%', height: '100%', textAlign: 'center' }}>\n                <Col md={{ span: 14, offset: 5 }} xs={{ span: 18, offset: 3 }}>\n                    <Row>\n                        <Divider orientation=\"left\"><TrophyTwoTone twoToneColor=\"#fbd71f\" style={{ marginRight: \"5px\" }} />어제의 기록</Divider>\n                        <Col md={{ span: 6, offset: 3 }} xs={{ span: 18, offset: 3 }} >\n                            <Statistic title=\"최다 구장 점령 수\" value={7} prefix={<LikeOutlined />}></Statistic>\n                        </Col>\n                        <Col md={{ span: 6, offset: 0 }} xs={{ span: 18, offset: 3 }}>\n                            <Statistic title=\"새로등록된 구장 수\" value={7} valueStyle={{ color: \"#40a9ff\" }} prefix={<ArrowUpOutlined />} suffix=\"개\"></Statistic>\n                        </Col>\n                        <Col md={{ span: 6, offset: 0 }} xs={{ span: 18, offset: 3 }}>\n                            <Statistic title=\"구장깨기 성공 비율\" value={30.45} precision={2} valueStyle={{ color: '#3f8600' }} prefix={<ArrowUpOutlined />} suffix=\"%\"></Statistic>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col md={{ span: 14, offset: 5 }} xs={{ span: 18, offset: 3 }}>\n                    <Input.Search size=\"large\" placeholder=\"활동지역을 검색하세요\" onSearch={onSearch} enterButton />\n                </Col>\n                <Col span={24}>\n                    <Row gutter={[10, 10]}>\n                        <Col span={24} >\n                            <Button type=\"primary\" icon={<SearchOutlined />} size=\"large\" shape=\"round\" onClick={onClickGPS} loading={isChangingLocation}>현재위치정보 이용하여 둘러보기</Button>\n                        </Col>\n                        <Col span={24}>\n                            <Button size=\"large\" icon={<InfoCircleOutlined />} shape=\"round\" onClick={onClickNoGPS}>지도로 구장 찾아보기</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Home;","export const initialState = {\n    latitude: \"37.5795876\", //현재 보는 지도의 위도\n    longitude: \"126.9636324\",//현재 보는 지도의 경도\n    stadiumList: [],\n    isChangingLocation:false,\n    isChangedLocation:false,\n    changeLocationErrorReason:'',\n}\nexport const REFRESH_STADIUMLIST_REQUEST = 'REFRESH_STADIUMLIST_REQUEST';\nexport const REFRESH_STADIUMLIST_SUCCESS = 'REFRESH_STADIUMLIST_SUCCESS';\nexport const REFRESH_STADIUMLIST_FAILURE = 'REFRESH_STADIUMLIST_FAILURE';\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case REFRESH_STADIUMLIST_REQUEST: {\n            return {\n                ...state,\n                latitude: action.data.latitude,\n                longitude: action.data.longitude,\n                isChangingLocation:true,\n                isChangedLocation:false,\n            }\n        }\n        case REFRESH_STADIUMLIST_SUCCESS: {\n            return {\n                ...state,\n                isChangingLocation:false,\n                isChangedLocation:true,\n                stadiumList:action.data,\n            }\n        }\n        case REFRESH_STADIUMLIST_FAILURE: {\n            return {\n                ...state,\n                isChangingLocation:false,\n                isChangedLocation:false,\n                changeLocationErrorReason:action.error\n            }\n        }\n        default: {\n            return {\n                ...state,\n            }\n        }\n    }\n}","export async function getLocation() {\n    return await new Promise((resolve, reject) => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function (pos) {\n                resolve([\"success\", \"현재 접속위치를 중심으로 지도를 활성화하였습니다.\", pos.coords.latitude, pos.coords.longitude]);\n            }, function (pos) {\n                resolve([\"warn\", \"위치정보제공을 동의하고 현재위치 주변 구장을 확인하세요.\"]);\n            }, { enableHighAccuracy: true });\n        } else {\n            resolve([\"error\", \"현재 브라우저에서는 현재위치 사용이 불가능합니다.\"]);\n        }\n    });\n};","module.exports = require(\"@ant-design/icons\");","module.exports = require(\"antd\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxtEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAGA;AA9BA;AAgCA;;;;;;;;;;;;AC7CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACZA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}