{"version":3,"file":"static/development/pages/stadium/register/details.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/stadium/register/details.js","webpack:///./reducers/stadium.js","webpack:///external \"@ant-design/icons\"","webpack:///external \"antd\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-redux\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { withRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {ENROLL_STADIUM_REQUEST} from '../../../reducers/stadium'\nimport { Col, Row, Typography, Button, Form, Input, TimePicker, Radio, Select, Upload} from 'antd';\nimport { PlusOutlined} from '@ant-design/icons';\n\nconst Details = (props) => {\n    // const [, forceUpdate] = useState(); \n    const { isEnrolling } = useSelector(state => state.stadium);\n    const [form] = Form.useForm();\n    const dispatch = useDispatch();\n    let data;\n\n    if (props.router.query.data) {\n        data = props.router.query.data.split(\",\");\n    }else{\n        console.log(\"어디서 사기치려고하니?\");\n    }\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    };\n    const onSubmitForm = useCallback((values)=>{\n        console.log(values);\n        dispatch({\n            type:ENROLL_STADIUM_REQUEST,\n            data:{\n                ...values\n            }\n        })\n    })\n    const multipleSpecaility = [\n        <Select.Option key={\"1\"}>잔디구장</Select.Option>,\n        <Select.Option key={\"2\"}>우레탄구장</Select.Option>,\n        <Select.Option key={\"3\"}>플라스틱 인도어구장</Select.Option>,\n        <Select.Option key={\"4\"}>샤워실</Select.Option>,\n        <Select.Option key={\"5\"}>근처 편의점</Select.Option>,\n        <Select.Option key={\"6\"}>탈의실</Select.Option>,\n        <Select.Option key={\"7\"}>대기용 좌석</Select.Option>,\n    ];\n    const normFile = e => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n    const uploadButton = (\n    <div>\n        <PlusOutlined />\n        <div className=\"ant-upload-text\">Upload</div>\n    </div>\n    );\n    // useEffect(() => {\n    //     forceUpdate({});\n    // }, []);\n    return (\n        <div style={{ width: '430px', margin: \"0 auto\", border: \"1px solid #dadce0\", borderRadius: \"8px\", padding:\"30px 10px\" }}>\n            <Row gutter={[0, 16]}>\n                <Col style={{ width: '100%', textAlign: \"center\" }}>\n                    <Typography.Title level={3} style={{ color: \"#202124\" }}>구장 등록하기</Typography.Title>\n                    <Typography style={{ color: \"#202124\", fontWeight: \"normal\" }}>구장 상세정보</Typography>\n                </Col>\n            </Row>\n            <Row gutter={[0, 16]}>\n                <Col span={22} offset={1}>\n                    <Form \n                    {...formItemLayout}\n                    layout=\"horizontal\"\n                    form={form}\n                    initialValues={{location:data? data[2]:'', light:'N'}}\n                    onFinish={onSubmitForm}\n                    scrollToFirstError\n                    >\n                        <Form.Item\n                        name=\"title\"\n                        label=\"구장명\"\n                        rules={[{required:true, message:\"구장명을 입력하여주세요\"}]}\n                        >\n                            <Input placeholder=\"정식 구장명을 입력해주세요\"/>\n                        </Form.Item>\n                        <Form.Item\n                        name=\"location\"\n                        label=\"주소\"\n                        >\n                            <Input disabled/>\n                        </Form.Item>\n                        <Form.Item\n                        name=\"time\"\n                        label=\"사용시간\"\n                        rules={[{required:true, message:\"사용가능 시간을 확인해주세요\"}]}\n                        >\n                            <TimePicker.RangePicker mode=\"time\" use12Hours format=\"h:mm a\" />\n                        </Form.Item>\n                        <Form.Item\n                        name=\"light\"\n                        label=\"라이트 여부\"\n                        >\n                            <Radio.Group>\n                                <Radio value=\"Y\">있음</Radio>\n                                <Radio value=\"N\">없음</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                        <Form.Item\n                        name=\"size\"\n                        label=\"구장 사이즈\"\n                        rules={[{required:true, message:\"구장 크기를 체크해주세요\"}]}\n                        >\n                            <Radio.Group>\n                                <Radio value=\"F\">풋살</Radio>\n                                <Radio value=\"M\">중형 축구장</Radio>\n                                <Radio value=\"N\">국제규격 축구장</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                        <Form.Item\n                        name=\"special\"\n                        label=\"특징\"\n                        >\n                            <Select mode=\"tags\" placeholder=\"구장의 다양한 특징을 선택해주세요\">\n                                {multipleSpecaility}\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                        name=\"description\"\n                        label=\"설명\"\n                        >\n                            <Input.TextArea placeholder=\"구장 설명과 특징을 적어주세요\u001d\" autoSize/>\n                        </Form.Item>\n                        <Form.Item\n                        name=\"picture\"\n                        label=\"사진\"\n                        valuePropName=\"fileList\"\n                        getValueFromEvent={normFile}\n                        >\n                            <Upload name=\"upload\" listType=\"picture-card\">\n                                {uploadButton}\n                            </Upload>\n\n                        </Form.Item>\n                        \n                        <Form.Item\n                        shouldUpdate\n                        wrapperCol={{\n                        span: 18,\n                        offset: 6\n                        }}\n                        style={{marginBottom:0}}\n                        >\n                            {() => (\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                shape=\"round\"\n                                loading={isEnrolling}\n                                disabled={\n                                    !form.isFieldsTouched([\"title\", \"size\", \"time\"],true) ||\n                                    form.getFieldsError().filter(({ errors }) => errors.length).length\n                                }\n                            >\n                                등록하기\n                            </Button>\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default withRouter(Details);","const dummyInfo = {\n    req:\"0\",\n    title:\"누상동 다목적 운동장\",\n    lat: \"37.5795876\",\n    lng: \"126.9636324\",\n    address:\"서울특별시 종로구 누상동 1-3\",\n    time:\"상시개방\",\n    light:\"N\",\n    special:[\"플라스틱 인도어구장\", \"화장실\"],\n    description:\"인왕산 초입에 있는 풋살 구장입니다. 골대와 바닥, 펜스가 최근에 교체하여 깔끔합니다.\",\n    team:\"잔디FC\",\n    teamInfo:\"1\",\n    valid:\"2020-05-05\",\n}\n\nexport const initialState = {\n    info:null, //스타디움 정보\n    pictures:[],\n    comments:[],\n    isEnrolling:false, //새 구장 등록중\n    isEnrolled:false,//새 구장 등록 성공\n    enrollmentErrorReason:'', //새 구장 등록 실패 사유\n    isSelected:false, //구장 선택 성공\n    isSelecting:false, //구장 선택중\n    selectedErrorReason:'',//구장 선택 실패 사유\n    isAddingComment:false,//구장 평점 등록중\n    isAddedComment:false,//구장 평점 등록 완료\n    addedCommentErrorReason:''//구장 평점 등록 실패 사유\n}\n\nexport const SELECT_STADIUM_REQUEST = 'SELECT_STADIUM_REQUSET';\nexport const SELECT_STADIUM_SUCCESS = 'SELECT_STADIUM_SUCCESS';\nexport const SELECT_STADIUM_FAILURE = 'SELECT_STADIUM_FAILURE';\n\nexport const ENROLL_STADIUM_REQUEST = 'ENROLL_STADIUM_REQUSET';\nexport const ENROLL_STADIUM_SUCCESS = 'ENROLL_STADIUM_SUCCESS';\nexport const ENROLL_STADIUM_FAILURE = 'ENROLL_STADIUM_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUSET';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SELECT_STADIUM_REQUEST:{\n            return{\n                ...state,\n                isSelecting:true,\n                selectedErrorReason:'',\n            }\n        }\n        case SELECT_STADIUM_SUCCESS:{\n            return{\n                ...state,\n                isSelecting:false,\n                isSelected:true,\n                info:dummyInfo,\n                comments:action.data,\n            }\n        }\n        case SELECT_STADIUM_FAILURE:{\n            return{\n                ...state,\n                isSelecting:false,\n                selectedErrorReason:action.error,\n                info:null,\n                isSelected:false,\n            }\n        }\n        case ENROLL_STADIUM_REQUEST:{\n            return{\n                ...state,\n                isEnrolling:true,\n                isEnrolled:false,\n                enrollmentErrorReason:'',\n            }\n        }\n        case ENROLL_STADIUM_SUCCESS:{\n            return{\n                ...state,\n                isEnrolled:true,\n                isEnrolling:false,\n            }\n        }\n        case ENROLL_STADIUM_FAILURE:{\n            return{\n                ...state,\n                isEnrolling:false,\n                enrollmentErrorReason:action.error,\n            }\n        }\n        case ADD_COMMENT_REQUEST:{\n            return{\n                ...state,\n                isAddingComment:true,\n                isAddedComment:false,\n                addedCommentErrorReason:'',\n            }\n        }\n        case ADD_COMMENT_SUCCESS:{\n            return{\n                ...state,\n                isAddedComment:true,\n                isAddingComment:false,\n                comments:action.data,\n            }\n        }\n        case ADD_COMMENT_FAILURE:{\n            return{\n                ...state,\n                isAddingComment:false,\n                addedCommentErrorReason:action.error,\n            }\n        }\n        default: {\n        return {\n            ...state,\n        };\n        }\n}\n};\n","module.exports = require(\"@ant-design/icons\");","module.exports = require(\"antd\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxmBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAGA;AA3EA;AA6EA;;;;;;;;;;;;;;;;;;;;;;;ACxHA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}